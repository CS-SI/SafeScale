#
# Copyright 2018-2023, CS Systemes d'Information, http://csgroup.eu
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

---
feature:
    suitableFor:
        host: no
        cluster: all

    requirements:
        - ansible

    install:
        bash:
            check:
                pace: config
                steps:
                    config:
                        targets:
                            hosts: no
                            gateways: no
                            masters: all
                            nodes: no
                        run: |
                            [[ ! -f ${SF_ETCDIR}/ansible/inventory/inventory.py ]] && sfFail 1
                            sfExit

            add:
                pace: config
                steps:
                    config:
                        targets:
                            hosts: no
                            gateways: no
                            masters: all
                            nodes: no
                        run: |
                            mv ${SF_ETCDIR}/ansible/ansible.cfg ${SF_ETCDIR}/ansible/ansible.cfg.host_only
                            mkdir -p ${SF_ETCDIR}/ansible/inventory
                            mkdir -p ${SF_ETCDIR}/ansible/group_vars
                            mkdir -p ${SF_ETCDIR}/ansible/hosts_vars
                            mkdir -p ${SF_ETCDIR}/ansible/library
                            mkdir -p ${SF_ETCDIR}/ansible/module_utils
                            mkdir -p ${SF_ETCDIR}/ansible/filter_plugins
                            mkdir -p ${SF_ETCDIR}/ansible/tasks
                            mkdir -p ${SF_ETCDIR}/ansible/roles
                            mkdir -p ${SF_ETCDIR}/ansible/vars
                            chmod -R ug+rw-x,o+r-wx ${SF_ETCDIR}/ansible

                            cat >${SF_ETCDIR}/ansible/ansible.cfg <<-EOF
                            [defaults]
                            inventory = ${SF_ETCDIR}/ansible/inventory/inventory.py
                            remote_tmp = ${SF_TMPDIR}/ansible-\${USER}
                            log_path = ${SF_LOGDIR}/ansible.log
                            EOF

                            cat >${SF_ETCDIR}/ansible/pathes.cfg <<-EOF
                            sf_base_dir: "/opt/safescale"
                            sf_etc_dir: "{{ "{{ sf_base_dir }}/etc" }}"
                            sf_var_dir: "{{ "{{ sf_base_dir }}/var" }}"
                            sf_tmp_dir: "{{ "{{ sf_var_dir }}/tmp" }}"
                            sf_log_dir: "{{ "{{ sf_var_dir }}/log" }}"
                            sf_state_dir: "{{ "{{ sf_var_dir }}/state" }}"
                            EOF

                            cat >${SF_ETCDIR}/ansible/host.cfg <<-EOF
                            host_private_ip: "{{ .HostIP }}"
                            EOF

                            cat >${SF_ETCDIR}/ansible/network.cfg <<-EOF
                            cidr: "{{ .CIDR }}"
                            primary_gateway_private_ip: "{{ .PrimaryGatewayIP }}"
                            primary_gateway_public_ip: "{{ .PrimaryPublicIP }}"
                            endpoint_ip: "{{ .EndpointIP }}"
                            default_route_ip: "{{ .DefaultRouteIP }}"
                            {{ if .SecondaryGatewayIP }}secondary_gateway_private_ip: "{{ .SecondaryGatewayIP }}"{{ end }}
                            {{ if .SecondaryPublicIP }}secondary_gateway_public_ip: "{{ .SecondaryPublicIP }}"{{ end }}
                            EOF

                            cat >${SF_ETCDIR}/ansible/cluster.cfg <<-EOF
                            cluster_name: "{{ .ClusterName }}"
                            cluster_flavor: "{{ .ClusterFlavor }}"
                            cluster_complexity: "{{ .ClusterComplexity }}"
                            controlplane_uses_vip: {{ .ClusterControlplaneUsesVIP }}
                            controlplane_endpoint_ip: "{{ .ClusterControlplaneEndpointIP }}"
                            cluster_admin_username: "{{ .ClusterAdminUsername }}"
                            EOF
                            
                            cat >${SF_ETCDIR}/ansible/inventory/inventory.py <<-EOF
                            #!/usr/bin/env python3
                            print("{\"_meta\": {\"hostvars\": {}},\"all\": {\"children\": [\"ungrouped\"]},\"ungrouped\": {\"children\": []}}")
                            EOF

                            chown -R {{ .ClusterAdminUsername }}:root ${SF_ETCDIR}/ansible
                            chmod -R ug+rwx,o+rx-w ${SF_ETCDIR}/ansible
                            find ${SF_ETCDIR}/ansible -type d -exec chmod a+x {} \;

                            chown safescale:root ${SF_ETCDIR}/ansible/inventory/inventory.py
                            chmod -R ug+rwx,o+rx-w ${SF_ETCDIR}/ansible/inventory
                            sfExit

            remove:
                pace: ansible,config
                steps:
                    ansible:
                        targets:
                            gateways: all
                            hosts: no
                            masters: all
                            nodes: all
                        run: |
                            case $LINUX_KIND in
                                debian|ubuntu)
                                    sfWaitForApt && apt-get purge -y ansible*
                                    apt-get autoremove -y
                                    ;;
                                centos|fedora|redhat|rhel)
                                    if [[ -n $(which dnf) ]]; then
                                        dnf remove -y ansible*
                                        dnf autoremove -y
                                    else
                                        yum remove -y ansible*
                                        yum autoremove -y
                                    fi
                                    ;;
                                *)
                                    echo "Unsupported operating system '$LINUX_KIND'"
                                    sfFail 1
                                    ;;
                            esac
                            sfExit

                    config:
                        targets:
                            gateways: no
                            hosts: yes
                            masters: all
                            nodes: no
                        run: |
                            rm -rf ${SF_ETCDIR}/ansible/cluster.cfg ${SF_ETCDIR}/ansible/inventory/inventory.py ${SF_ETCDIR}/ansible/ansible.cfg
                            [ -r ${SF_ETCDIR}/ansible/ansible.cfg.host_only ] && mv ${SF_ETCDIR}/ansible/ansible.cfg.host_only ${SF_ETCDIR}/ansible/ansible.cfg 
                            chown -R {{ .Username }}:root ${SF_ETCDIR}/ansible
                            chmod -R ug+rwx,o+rx-w ${SF_ETCDIR}/ansible
                            find ${SF_ETCDIR}/ansible -type d -exec chmod a+x {} \;
                            sfExit
...
