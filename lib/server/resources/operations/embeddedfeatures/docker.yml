#
# Copyright 2018-2021, CS Systemes d'Information, http://www.c-s.fr
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

---
feature:
    suitableFor:
        host: yes
        cluster: all

    parameters:
        - DockerComposeVersion=1.27.4

    install:
        bash:
            check:
                pace: pkg
                steps:
                    pkg:
                        targets:
                            hosts: yes
                            gateways: all
                            masters: all
                            nodes: all
                        run: |
                            case $LINUX_KIND in
                                debian|ubuntu)
                                    dpkg -l | grep docker-ce &>/dev/null || sfFail 194 "package docker-ce not found"
                                    docker ps &>/dev/null || sfFail 1 "Docker daemon not running"
                                    rm -f /tmp/docker-fail.txt || true
                                    op=-1
                                    sfRetryEx 5m 5 docker pull hello-world 2>/tmp/docker-fail.txt && op=$? || op=$?
                                    if [[ $op -ne 0 ]]; then
                                        sfFail $op "$(cat /tmp/docker-fail.txt)"
                                    fi
                                    rm -f /tmp/docker-fail.txt || true
                                    docker run hello-world | grep "working correctly" || sfFail 211 "failure running hello-world docker image"
                                    ;;
                                centos|redhat|rhel)
                                    rpm -qa | grep docker-ce &>/dev/null || sfFail 194 "package docker-ce not found"
                                    docker ps &>/dev/null || sfFail 1 "Docker daemon not running"
                                    rm -f /tmp/docker-fail.txt || true
                                    op=-1
                                    sfRetryEx 5m 5 docker pull hello-world 2>/tmp/docker-fail.txt && op=$? || op=$?
                                    if [[ $op -ne 0 ]]; then
                                        sfFail $op "$(cat /tmp/docker-fail.txt)"
                                    fi
                                    rm -f /tmp/docker-fail.txt || true
                                    docker run hello-world | grep "working correctly" || sfFail 211 "failure running hello-world docker image"
                                    ;;
                                fedora)
                                    rpm -qa | grep docker-ce &>/dev/null || sfFail 194 "package docker-ce not found"
                                    docker ps &>/dev/null || sfFail 1 "Docker daemon not running"
                                    rm -f /tmp/docker-fail.txt || true
                                    op=-1
                                    sfRetryEx 5m 5 docker pull hello-world 2>/tmp/docker-fail.txt && op=$? || op=$?
                                    if [[ $op -ne 0 ]]; then
                                        sfFail $op "$(cat /tmp/docker-fail.txt)"
                                    fi
                                    rm -f /tmp/docker-fail.txt || true
                                    docker run hello-world | grep "working correctly" || sfFail 211 "failure running hello-world docker image"
                                    ;;
                                *)
                                    echo "Unsupported operating system '$LINUX_KIND'"
                                    sfFail 195 "Unsupported operating system '$LINUX_KIND'"
                                    ;;
                            esac
                            sfExit

            add:
                pace: cleanup,docker-ce,docker-compose,config,firewall,enable,verify
                steps:
                    cleanup:
                        targets:
                            hosts: yes
                            gateways: all
                            masters: all
                            nodes: all
                        run: |
                            case $LINUX_KIND in
                                debian|ubuntu)
                                    export DEBIAN_FRONTEND=noninteractive
                                    sfRetry "sfApt update"
                                    sfRetry "sfApt remove -y docker docker-engine docker.io containerd runc"
                                    ;;
                                centos|redhat)
                                    sfRetry "yum remove -y docker docker-client ocker-client-latest \
                                                                   docker-common docker-latest docker-latest-logrotate \
                                                                   docker-logrotate docker-engine"
                                    ;;
                                fedora)
                                    sfRetry "dnf remove -y docker docker-client docker-client-latest docker-common \
                                                                   docker-latest docker-latest-logrotate docker-logrotate \
                                                                   docker-selinux docker-engine-selinux docker-engine"
                                    ;;
                                *)
                                    echo "Unsupported operating system '$LINUX_KIND'"
                                    sfFail 192
                                    ;;
                            esac
                            sfExit

                    docker-ce:
                        targets:
                            hosts: yes
                            gateways: all
                            masters: all
                            nodes: all
                        run: |
                            case $LINUX_KIND in
                                debian|ubuntu)
                                    export DEBIAN_FRONTEND=noninteractive
                                    sfRetryEx {{ or .reserved_LongTimeout "6m" }} {{ or .reserved_DefaultDelay 10 }} "sfApt update"
                                    sfRetryEx {{ or .reserved_LongTimeout "6m" }} {{ or .reserved_DefaultDelay 10 }} "sfApt install -qqy --force-yes gnupg2 || sfApt install -qqy --force-yes gnupg"
                                    sfRetryEx {{ or .reserved_LongTimeout "6m" }} {{ or .reserved_DefaultDelay 10 }} "sfApt install -qqy --force-yes apt-transport-https ca-certificates curl software-properties-common" || sfFail 193 "error installing apt tools (exit code $?)"
                                    sfRetryEx {{ or .reserved_LongTimeout "6m" }} {{ or .reserved_DefaultDelay 10 }} "curl -fsSL https://download.docker.com/linux/$LINUX_KIND/gpg | apt-key add -" || sfFail 194 "error updating gpg keys"
                                    echo "deb [arch=amd64] https://download.docker.com/linux/$LINUX_KIND $(lsb_release -cs) stable" >/etc/apt/sources.list.d/docker.list
                                    sfRetryEx {{ or .reserved_LongTimeout "6m" }} {{ or .reserved_DefaultDelay 10 }} "sfApt update"
                                    sfRetryEx {{ or .reserved_LongTimeout "6m" }} {{ or .reserved_DefaultDelay 10 }} "sfApt install -qqy --force-yes docker-ce" || sfFail 195 "error installing docker-ce (exit code $?)"
                                    ;;
                                centos|redhat|rhel)
                                    sfRetryEx {{ or .reserved_LongTimeout "6m" }} {{ or .reserved_DefaultDelay 10 }} "yum install -y yum-utils device-mapper-persistent-data lvm2" || sfFail 196 "error installing yum prerequisites"
                                    sfRetryEx {{ or .reserved_LongTimeout "6m" }} {{ or .reserved_DefaultDelay 10 }} "yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo" || sfFail 197 "error adding docker-ce repo"
                                    kop=0
                                    op=-1
                                    yum install -y curl --nobest &>/dev/null && op=$? || true
                                    if [ $op -ne 0 ]; then
                                        sfRetryEx {{ or .reserved_LongTimeout "6m" }} {{ or .reserved_DefaultDelay 10 }} "yum install -y curl &>/dev/null" && op=$? || true
                                        if [ $op -ne 0 ]; then
                                            sfFail 198 "error installing curl"
                                        else
                                            sfRetryEx {{ or .reserved_LongTimeout "6m" }} {{ or .reserved_DefaultDelay 10 }} "yum install -y docker-ce docker-ce-cli containerd.io" || sfFail 199 "error installing docker-ce (exit code $?)"
                                        fi
                                    else
                                        sfRetryEx {{ or .reserved_LongTimeout "6m" }} {{ or .reserved_DefaultDelay 10 }} "yum install -y docker-ce docker-ce-cli containerd.io --nobest" || sfFail 200"error installing docker-ce --nobest (exit code $?)"
                                    fi
                                    cat /etc/redhat-release | grep 8. && systemctl enable --now docker || true
                                    ;;
                                fedora)
                                    sfRetryEx {{ or .reserved_LongTimeout "6m" }} {{ or .reserved_DefaultDelay 10 }} "dnf install -y yum-utils device-mapper-persistent-data lvm2" || sfFail 201
                                    sfRetryEx {{ or .reserved_LongTimeout "6m" }} {{ or .reserved_DefaultDelay 10 }} "dnf config-manager --add-repo=https://download.docker.com/linux/fedora/docker-ce.repo"
                                    kop=0
                                    op=-1
                                    dnf install -y curl --nobest &>/dev/null && op=$? || true
                                    if [ $op -ne 0 ]; then
                                        dnf install -y curl &>/dev/null && op=$? || true
                                        if [ $op -ne 0 ]; then
                                            sfFail 202 "error installing curl"
                                        else
                                            sfRetryEx {{ or .reserved_LongTimeout "6m" }} {{ or .reserved_DefaultDelay 10 }} "dnf install -y docker-ce docker-ce-cli containerd.io" || sfFail 203 "error installing docker-ce (exit code $?)"
                                        fi
                                    else
                                        sfRetryEx {{ or .reserved_LongTimeout "6m" }} {{ or .reserved_DefaultDelay 10 }} "dnf install -y docker-ce docker-ce-cli containerd.io --nobest" || sfFail 204 "error installing docker-ce (exit code $?)"
                                    fi
                                    systemctl enable --now docker || true
                                    ;;
                                *)
                                    echo "Unsupported operating system '$LINUX_KIND'"
                                    sfFail 205 "Unsupported operating system '$LINUX_KIND'"
                                    ;;
                            esac
                            sfExit

                    docker-compose:
                        targets:
                            hosts: yes
                            gateways: all
                            masters: all
                            nodes: all
                        run: |
                            op=-1
                            VERSION="{{.DockerComposeVersion}}"
                            if [[ "latest" = "${VERSION}" ]]; then
                                VERSION=$(sfRetry "curl -kSsL https://api.github.com/repos/docker/compose/releases/{{.DockerComposeVersion}} | jq -r .name") && op=$? || true
                                [ $op -ne 0 ] && sfFail 206 "error getting last docker-compose version"
                            fi
                            URL="https://github.com/docker/compose/releases/download/${VERSION}/docker-compose-$(uname -s)-$(uname -m)"
                            sfDownload "$URL" docker-compose 3m 5 || sfFail 207 "error downloading last docker-compose ${VERSION}"
                            chmod +x docker-compose && mv docker-compose /usr/bin
                            sfExit

                    config:
                        targets:
                            hosts: yes
                            gateways: all
                            masters: all
                            nodes: all
                        run: |
                            mkdir -p /etc/docker
                            if [ "$(sfGetFact use_systemd)" = "1" ]; then
                                DRIVER=systemd
                            else
                                DRIVER=cgroupfs
                            fi
                            if [ "$(sfGetFact redhat_like)" = "1" ]; then
                                cat > /etc/docker/daemon.json <<-EOF
                            {
                                "iptables": false,
                                "exec-opts": [
                                    "native.cgroupdriver=${DRIVER}"
                                ],
                                "no-new-privileges": false,
                                "log-driver": "json-file",
                                "log-level":"info",
                                "log-opts": {
                                    "max-size": "100m"
                                },
                                "experimental": true,
                                "metrics-addr": "0.0.0.0:9323",
                                "storage-driver": "overlay2",
                                "userland-proxy": false,
                                "storage-opts": [
                                    "overlay2.override_kernel_check=true"
                                ]
                            }
                            EOF
                            else
                            # VPL: these options seems to trouble docker in some cases. Need further analysis.
                            #    "exec-opts": [
                            #        "native.cgroupdriver=${DRIVER}"
                            #    ],
                                cat > /etc/docker/daemon.json <<-EOF
                            {
                                "no-new-privileges": false,
                                "log-driver": "json-file",
                                "log-level":"info",
                                "log-opts": {
                                    "max-size": "100m"
                                },
                                "experimental": true,
                                "metrics-addr": "0.0.0.0:9323",
                                "storage-driver": "overlay2"
                            }
                            EOF
                            fi
                            sfExit

                    firewall:
                        targets:
                            gateways: all
                            hosts: yes
                            masters: all
                            nodes: all
                        run: |
                            # First once dockerd, allowing it to create needed firewalld zone docker...
                            sfFirewallReload || sfFail 208 "failed to reload firewalld, ensuring it works correctly"
                            sfService restart docker || sfFail 209 "failed to restart dockerd for the first time"

                            # ... and if no such zone is created, create needed firewalld rules
                            # FIXME: it should be better to create a configuration identical to the one created by docker 20.10+...
                            sfFirewall --info-zone=docker 2>&1 >/dev/null || {
                                sfFirewallAdd --zone=trusted --add-interface=docker0
                                sfFirewallAdd --zone=trusted --add-masquerade
                                sfFirewallReload || sfFail 210 "Firewall problem"
                            }
                            sfExit

                    enable:
                        targets:
                            gateways: all
                            hosts: yes
                            masters: all
                            nodes: all
                        run: |
                            sfService enable docker || sfFail 211
                            sfService restart docker || sfFail 212
                            op=-1
                            sfRetry "sfService status docker &>/dev/null" && op=$? || true
                            [ $op -ne 0 ] && sfFail 213
                            sfExit

                    verify:
                        targets:
                            gateways: all
                            hosts: yes
                            masters: all
                            nodes: all
                        run: |
                            sleep {{ or .reserved_DefaultDelay 10 }}
                            sleep {{ or .reserved_DefaultDelay 10 }}
                            rm -f /tmp/docker-fail.txt || true
                            op=-1
                            sfRetryEx 5m 5 "docker pull hello-world 2>>/tmp/fail.txt 7>>/tmp/fail.txt" && op=$? || op=$?
                            if [[ $op -ne 0 ]]; then
                                sfFail 214 "$(cat /tmp/docker-fail.txt)\nexit code $op"
                            fi
                            rm -f /tmp/docker-fail.txt || true
                            docker run hello-world | grep "working correctly" || sfFail 215 "failure running hello-world docker image"
                            sfExit

            remove:
                pace: cleanup
                steps:
                    cleanup:
                        targets:
                            gateways: all
                            hosts: yes
                            masters: all
                            nodes: all
                        run: |
                            sfService disable docker
                            sfService stop docker

                            sfFirewallAdd --zone=trusted --remove-interface=docker0 --remove-interface=docker_gwbridge
                            sfFirewallReload || sfFail 192 "Firewall problem"

                            case $LINUX_KIND in
                                debian|ubuntu)
                                    sfApt purge -y docker-ce*
                                    ;;
                                centos|redhat|rhel)
                                    yum remove -y docker-ce*
                                    ;;
                                fedora)
                                    dnf remove -y docker-ce*
                                    ;;
                                *)
                                    echo "Unsupported operating system '$LINUX_KIND'"
                                    sfFail 193 "Unsupported operating system '$LINUX_KIND'"
                                    ;;
                            esac
                            rm -f /usr/bin/docker-compose || true
                            sfExit

...
