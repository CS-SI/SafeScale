#
# Copyright 2018-2022, CS Systemes d'Information, http://csgroup.eu
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

---
feature:
    suitableFor:
        host: yes
        cluster: all

    install:
        bash:
            check:
                pace: pkg,config
                steps:
                    pkg:
                        targets:
                            hosts: yes
                            gateways: no
                            masters: all
                            nodes: no
                        run: |
                            case $LINUX_KIND in
                                debian|ubuntu)
                                    dpkg -l | grep ansible &>/dev/null || sfFail 1
                                    ;;
                                centos|fedora|redhat|rhel)
                                    rpm -qa | grep ansible &>/dev/null || sfFail 1
                                    ;;
                                *)
                                    echo "Unsupported operating system '$LINUX_KIND'"
                                    sfFail 1
                                    ;;
                            esac
                            sfExit

                    config:
                        targets:
                            hosts: yes
                            gateways: no
                            masters: all
                            nodes: no
                        run: |
                            [[ ! -d ${SF_ETCDIR}/ansible ]] && sfFail 1
                            [[ ! -f ${SF_ETCDIR}/ansible/ansible.cfg ]] && sfFail 2
                            sfExit

            add:
                pace: ansible,config
                steps:
                    ansible:
                        targets:
                            hosts: yes
                            gateways: no
                            masters: all
                            nodes: no
                        run: |
                            case $LINUX_KIND in
                                ubuntu)
                                    export DEBIAN_FRONTEND=noninteractive
                                    sfRetry "sfApt update"
                                    apt-cache showpkg software-properties-common && apt-get install -y software-properties-common
                                    apt-cache showpkg python-software-properties && apt-get install -y python-software-properties
                                    apt-add-repository --yes --update ppa:ansible/ansible
                                    sfRetry "sfApt update"
                                    sfRetry "sfApt install -y ansible"
                                    ;;
                                debian)
                                    export DEBIAN_FRONTEND=noninteractive
                                    sfRetry "sfApt update"
                                    echo "deb http://ppa.launchpad.net/ansible/ansible/ubuntu trusty main" >> /etc/apt/sources.list
                                    sudo apt-key adv --keyserver keyserver.ubuntu.com --recv-keys 93C4A3FD7BB9C367 -y
                                    sfRetry "sfApt update"
                                    sfRetry "sfApt install -y ansible"
                                    ;;
                                centos|redhat|rhel)
                                    if [[ -n $(which dnf) ]]; then
                                        sfRetryEx 3m 5 "dnf install --enablerepo=epel -y ansible" || sfFail 192
                                    else
                                        yum install -y ansible || sfFail 192
                                    fi
                                    ;;
                                fedora)
                                    if [[ -n $(which dnf) ]]; then
                                        dnf install -y ansible || sfFail 192
                                    else
                                        yum install -y ansible || sfFail 192
                                    fi
                                    ;;
                                *)
                                    echo "Unsupported operating system '$LINUX_KIND'"
                                    sfFail 195
                                    ;;
                            esac
                            sfExit

                    config:
                        targets:
                            hosts: yes
                            gateways: no
                            masters: all
                            nodes: no
                        run: |
                            mkdir -p ${SF_ETCDIR}/ansible/inventory
                            chmod -R ug+rw-x,o+r-wx ${SF_ETCDIR}/ansible

                            cat >${SF_ETCDIR}/ansible/ansible.cfg <<-EOF
                            [defaults]
                            inventory = ${SF_ETCDIR}/ansible/inventory/_static.yml
                            remote_tmp = ${SF_TMPDIR}/ansible-\${USER}
                            log_path = ${SF_LOGDIR}/ansible.log
                            EOF

                            cat >${SF_ETCDIR}/ansible/inventory/_static.yml <<-EOF
                            ...
                            all:
                                hosts:
                                    {{ .Hostname }}:
                                        ansible_host: {{ .HostIP }}
                            
                                vars:
                                    ansible_user: {{ .OperatorUsername }}
                            EOF
                            
                            cat >${SF_ETCDIR}/ansible/pathes.cfg <<-EOF
                            sf_base_dir: "/opt/safescale"
                            sf_etc_dir: "{{ "{{ sf_base_dir }}/etc" }}"
                            sf_var_dir: "{{ "{{ sf_base_dir }}/var" }}"
                            sf_tmp_dir: "{{ "{{ sf_var_dir }}/tmp" }}"
                            sf_log_dir: "{{ "{{ sf_var_dir }}/log" }}"
                            sf_state_dir: "{{ "{{ sf_var_dir }}/state" }}"
                            EOF

                            cat >${SF_ETCDIR}/ansible/host.cfg <<-EOF
                            host_private_ip: "{{ .HostIP }}"
                            EOF

                            cat >${SF_ETCDIR}/ansible/network.cfg <<-EOF
                            cidr: "{{ .CIDR }}"
                            primary_gateway_private_ip: "{{ .PrimaryGatewayIP }}"
                            primary_gateway_public_ip: "{{ .PrimaryPublicIP }}"
                            endpoint_ip: "{{ .EndpointIP }}"
                            default_route_ip: "{{ .DefaultRouteIP }}"
                            {{ if .SecondaryGatewayIP }}secondary_gateway_private_ip: "{{ .SecondaryGatewayIP }}"{{ end }}
                            {{ if .SecondaryPublicIP }}secondary_gateway_public_ip: "{{ .SecondaryPublicIP }}"{{ end }}
                            EOF

                            chown -R {{ .OperatorUsername }}:root ${SF_ETCDIR}/ansible
                            chmod -R ug+rwx,o+rx-w ${SF_ETCDIR}/ansible
                            find ${SF_ETCDIR}/ansible -type d -exec chmod a+x {} \;
                            sfExit

            remove:
                pace: ansible,config
                steps:
                    ansible:
                        targets:
                            gateways: all
                            hosts: no
                            masters: all
                            nodes: all
                        run: |
                            case $LINUX_KIND in
                                debian|ubuntu)
                                    sfWaitForApt && apt-get purge -y ansible*
                                    apt-get autoremove -y
                                    ;;
                                centos|fedora|redhat|rhel)
                                    if [[ -n $(which dnf) ]]; then
                                        dnf remove -y ansible*
                                        dnf autoremove -y
                                    else
                                        yum remove -y ansible*
                                        yum autoremove -y
                                    fi
                                    ;;
                                *)
                                    echo "Unsupported operating system '$LINUX_KIND'"
                                    sfFail 1
                                    ;;
                            esac
                            sfExit

                    config:
                        targets:
                            hosts: yes
                            gateways: no
                            masters: all
                            nodes: no
                        run: |
                            rm -rf ${SF_ETCDIR}/ansible ${SF_LOGDIR}/ansible_*
                            sfExit
...
