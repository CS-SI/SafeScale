#
# Copyright 2018-2020, CS Systemes d'Information, http://www.c-s.fr
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

---
feature:
    suitableFor:
        host: yes
        cluster: all
    parameters:
        - Version=7.2.0
        - ElasticsearchURL=http://{{ .HostIP }}:9200/
        - KibanaURL=http://{{ .HostIP }}:5601/

    install:
        bash:
            check:
                pace: docker
                steps:
                    docker:
                        targets:
                            gateways: all
                            hosts: yes
                            masters: all
                            nodes: all
                        run: |
                            sfDoesDockerRunContainer docker.elastic.co/beats/packetbeat:{{ .Version }} packetbeat4safescale_agent_1 || sfFail 192
                            sfExit

            add:
                pace: config,compose,start
                steps:
                    config:
                        targets:
                            gateways: all
                            hosts: yes
                            masters: all
                            nodes: all
                        run: |
                            mkdir -p ${SF_ETCDIR}/packetbeat4safescale/modules.d

                            cat >${SF_ETCDIR}/packetbeat4safescale/config.yml <<-'EOF'
                            packetbeat:
                                config:
                                    modules:
                                        path: ${path.config}/modules.d/*.yml
                                        reload.enabled: true
                                        reload.period: 10s
                                autodiscover:
                                    providers:
                                        - type: docker
                                          hints.enabled: true

                            system.hostsfs: /hostfs

                            processors:
                            - add_docker_metadata: ~
                            - add_locale: ~

                            output.elasticsearch:
                                hosts:
                            {{- if .ClusterFlavor }}
                                {{- range .ClusterMasterIPs }}
                                    - "http://{{ . }}:9200/"
                                {{ end -}}
                            {{ else }}
                                    - "{{ .ElasticsearchURL }}"
                            {{ end -}}
                            setup.dashboards:
                                enabled: true
                            setup.kibana:
                            {{- if .ClusterFlavor }}
                                host: "https://{{ .DefaultRouteIP }}/monitoring/kibana/"
                            {{ else }}
                                host: "{{.KibanaURL}}"
                            {{ end -}}

                            xpack:
                                monitoring.enabled: true
                                ml.enabled: false
                            EOF
                            chown -R {{ .Username }}:{{ .Username }} ${SF_ETCDIR}/packetbeat4safescale
                            chmod u+rw-x,g+r-wx,o-rwx ${SF_ETCDIR}/packetbeat4safescale/config.yml

                    compose:
                        targets:
                            gateways: all
                            hosts: yes
                            masters: all
                            nodes: all
                        run: |
                            cat >${SF_ETCDIR}/packetbeat4safescale/docker-compose.yml <<-EOF
                            version: '2.1'

                            services:
                                agent:
                                    image: docker.elastic.co/beats/packetbeat:{{ .Version }}
                                    command: "packetbeat -e -strict.perms=false"
                                    volumes:
                                        - ${SF_ETCDIR}/packetbeat4safescale/modules.d:/etc/beat/modules.d:ro
                                        - ${SF_ETCDIR}/packetbeat4safescale/config.yml:/usr/share/packetbeat/packetbeat.yml:ro
                                        - /var/run/docker.sock:/var/run/docker.sock:ro
                                        - /:/hostfs:ro
                                        - /proc:/hostfs/proc:ro
                                        - /sys/fs/cgroup:/hostfs/sys/fs/cgroup:ro
                                    network_mode: "host"
                                    cap_add:
                                        - net_raw
                                        - net_admin
                                    restart: always
                            EOF
                            chown -R safescale:safescale ${SF_ETCDIR}/packetbeat4safescale
                            chmod -R u+rw-x,g+r-wx,o-rwx ${SF_ETCDIR}/packetbeat4safescale

                    start:
                        targets:
                            gateways: all
                            hosts: yes
                            masters: all
                            nodes: all
                        run: |
                            docker-compose -f ${SF_ETCDIR}/packetbeat4safescale/docker-compose.yml -p packetbeat4safescale up -d || sfFail 193
                            sfRetry 5m 5 "sfDoesDockerRunContainer docker.elastic.co/beats/packetbeat:{{ .Version }} packetbeat4safescale_agent_1" || sfFail 194
                            sfExit

            remove:
                pace: stop,cleanup
                steps:
                    stop:
                        targets:
                            gateways: all
                            hosts: yes
                            masters: all
                            nodes: all
                        run: |
                            docker-compose -f ${SF_ETCDIR}/packetbeat4safescale/docker-compose.yml -p packetbeat4safescale rm --stop --force || sfFail 195
                            sfExit

                    cleanup:
                        targets:
                            gateways: all
                            hosts: yes
                            masters: all
                            nodes: all
                        run: |
                            docker image rm -f docker.elastic.co/beats/packetbeat:{{ .Version }}
                            rm -rf ${SF_ETCDIR}/packetbeat4safescale
                            sfExit

...