#
# Copyright 2018-2019, CS Systemes d'Information, http://www.c-s.fr
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

---
feature:
    suitableFor:
        host: yes
        cluster: all
    requirements:
        features:
            - docker
            - docker-compose
    parameters:
        - KeepDataOnRemoval=yes
        - ClusterName=safescale
    
    install:
        bash:
            check:
                pace: present
                steps:
                    present:
                        targets:
                            hosts: yes
                            masters: all
                            nodes: no
                        run: |
                            [ -d ${SF_ETC_DIR}/elasticsearch ] || exit 192
                            docker image ls {{ "--format '{{.Repository}}:{{.Tag}}'" }} | grep 'elasticsearch-oss:7' &>/dev/null || exit 193
                            exit 0

            add:
                pace: image,config,start,ready
                steps:
                    image:
                        targets:
                            hosts: yes
                            masters: all
                            nodes: no
                        run: |
                            docker pull elasticsearch-oss:7

                    config:
                        targets:
                            hosts: yes
                            masters: all
                            nodes: no
                        run: |
                            mkdir -p ${SF_ETCDIR}/elasticsearch ${SF_VARDIR}/elasticsearch

                            {{ if .ClusterFlavor }}
                            seeds="{{- range .MasterIPs }}{{.}},{{ end -}}"
                            {{ else }}
                            seeds="{{.HostIP}}"
                            {{ end }}
                            seeds=${seeds%,}

                            HOSTNAME_PREFIX=elasticsearch
                            {{ if .ClusterFlavor }}
                            HOSTNAME_PREFIX="${HOSTNAME_PREFIX}4safescale"
                            {{ end }}
                            cat >${SF_ETCDIR}/elasticsearch/docker-compose.yml <<-EOF
                            version: '2.1'

                            services:
                                server:
                                    image: elasticsearch-oss:7
                                    environment:
                                        - cluster.name={{ .ClusterName }}
                                        - node.name=${HOSTNAME_PREFIX}-{{.Hostname}}
                                        - discovery.seed_hosts=${seeds}
                                        - cluster.initial_master_nodes=${seeds}
                                        - bootstrap.memory_lock=true
                                        - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
                                    ports:
                                        - {{.HostIP}}:9200:9200
                                        #- {{.HostIP}}:9300:9300
                                    volumes:
                                        - ${SF_VARDIR}/elasticsearch:/var/lib/elasticsearch
                                    restart: always

                                logstash:
                                    logstash:
                                        image: logstash:7
                                    ports:
                                        - "{{ .HostIP }}:5000:5000"
                                        - "{{ .HostIP }}:5000:5000/udp"
                                        - "{{ .HostIP }}:12201:12201/udp"
                                    volumes:
                                        - ${SF_ETCDIR}/elasticsearch/logstash.conf:/usr/share/logstash/pipeline/logstash.conf:ro
                                    restart: always
                                    command: [ "-f", "${SF_ETCDIR}/elasticsearch/logstach/" ]
                            EOF
                            exit 0

                    start:
                        targets:
                            hosts: yes
                            masters: all
                            nodes: no
                        run: |
                            {{ if .ClusterFlavor }}
                            OPTIONS="-p elasticsearch4safescale"
                            {{ else }}
                            OPTIONS=
                            {{ end }}
                            docker-compose -f ${SF_ETCDIR}/elasticsearch/docker-compose.yml $OPTIONS up -d

                    ready:
                        targets:
                            hosts: yes
                            masters: any
                            nodes: no
                        run: |
                            {{ if .ClusterFlavor }}
                            PREFIX="elasticsearch4safescale"
                            {{ else }}
                            PREFIX="elasticsearch"
                            {{ end }}
                            sfRetry 5m 5 docker inspect {{ "--format='{{.State.Status}}'" }} ${PREFIX}_server_1 | grep -i running

            remove:
                pace: stop,remove
                steps:
                    stop:
                        targets:
                            hosts: yes
                            masters: all
                            nodes: all
                        run: |
                            {{ if .ClusterFlavor }}
                            OPTIONS="-p elasticsearch4safescale"
                            {{ else }}
                            OPTIONS=
                            {{ end }}
                            docker-compose -f ${SF_ETCDIR}/elasticsearch/docker-compose.yml $OPTIONS rm --stop -v --force || exit 192

                    remove:
                        targets:
                            hosts: yes
                            masters: all
                            nodes: all
                        run: |
                            docker image rm -f elasticsearch:7
                            purge={{.KeepDataOnRemoval}}
                            purge=${purge,,}
                            [ "$purge" = "yes" ] && rm -rf ${SF_ETCDIR}/elasticsearch ${SF_VARDIR}/elasticsearch
                            exit 0

    proxy:
        rules:
            - name: elasticsearch_http_svc
              type: service
              targets:
                  hosts: true
                  masters: all
              content: |
                  {
                      "name": "elasticsearch_http_{{.Hostname}}",
                      "url": "http://{{.HostIP}}:9200/"
                  }

            # - name: elasticsearch_transport_svc
            #   type: service
            #   targets:
            #       hosts: true
            #       masters: all
            #   content: |
            #       {
            #           "name": "elasticsearch_transport_{{.Hostname}}",
            #           "url": "http://{{.HostIP}}:9300/"
            #       }

            - name: elasticsearch_http_route
              type: route
              targets:
                  hosts: true
                  masters: all
              content: |
                  {
                      "paths": ["/monitoring/elasticsearch/"],
                      "service": { "id": "{{.elasticsearch_http_svc}}" }
                  }

...