#
# Copyright 2018-2019, CS Systemes d'Information, http://www.c-s.fr
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

---
feature:
    suitableFor:
        host: yes
        cluster: all
    requirements:
        features:
            - docker
            - docker-compose
    parameters:
        - Version=7.2.0
        - KeepDataOnRemoval=yes
        - ClusterName=safescale

    install:
        bash:
            check:
                pace: running
                steps:
                    running:
                        targets:
                            hosts: yes
                            masters: all
                            nodes: no
                        run: |
                            sfDoesDockerRun docker.elastic.co/elasticsearch/elasticsearch:{{ .Version }} || exit 192
                            exit 0

            add:
                pace: config,start,running,ready
                steps:
                    config:
                        targets:
                            hosts: yes
                            masters: all
                            nodes: no
                        run: |
                            mkdir -p ${SF_ETCDIR}/elasticsearch ${SF_VARDIR}/elasticsearch ${SF_LOGDIR}/elasticsearch
                            chown 1000:safescale ${SF_VARDIR}/elasticsearch ${SF_LOGDIR}/elasticsearch
                            chown safescale:safescale ${SF_ETCDIR}/elasticsearch
                            chmod u+rwx,g+rx-w,o-rwx ${SF_ETCDIR}/elasticsearch ${SF_VARDIR}/elasticsearch ${SF_LOGDIR}/elasticsearch

                            {{ if .ClusterFlavor }}
                            HOSTNAME_PREFIX=elasticsearch4safescale
                            SEEDS="{{- range .MasterIPs }}{{.}},{{ end -}}"
                            {{ else }}
                            HOSTNAME_PREFIX=elasticsearch
                            SEEDS="{{.HostIP}}"
                            {{ end }}
                            SEEDS=${SEEDS%,}

                            # determine if processor supports SSE4.2
                            if grep sse4_2 /proc/cpuinfo &>/dev/null; then
                                MACHINE_LEARNING=true
                            else
                                MACHINE_LEARNING=false
                            fi

                            cat >${SF_ETCDIR}/elasticsearch/config.yml <<-EOF
                            cluster.name: {{ .ClusterName }}
                            node.name: ${HOSTNAME_PREFIX}-{{ .Hostname }}
                            network.host: {{ .HostIP }}
                            discovery:
                            {{- if .ClusterFlavor}}
                                {{- if eq (len .MasterIPs) 1 }}
                                type: single-node
                                zen.minimum_master_nodes: 1
                                {{ else }}
                                #seed_hosts: "${SEEDS}"
                                zen.ping.unicast.hosts: "${SEEDS}"
                                zen.minimum_master_nodes: 2
                            cluster.initial_master_nodes: "${SEEDS}"
                                {{ end -}}
                            {{ else }}
                                type: single-node
                            {{ end }}
                            bootstrap.memory_lock: true

                            path:
                                logs: /var/log/elasticsearch

                            xpack:
                                license.self_generated.type: basic
                                security.enabled: false
                                ml.enabled: ${MACHINE_LEARNING}
                                monitoring:
                                    collection.enabled: true
                                    elasticsearch.collection.enabled: true
                            node.ml: ${MACHINE_LEARNING}
                            EOF
                            chown 1000:safescale ${SF_ETCDIR}/elasticsearch/config.yml
                            chmod u+rw-x,g+r-wx,o-rwx ${SF_ETCDIR}/elasticsearch/config.yml

                            cat >${SF_ETCDIR}/elasticsearch/docker-compose.yml <<-EOF
                            version: '3.7'

                            services:
                                server:
                                    image: docker.elastic.co/elasticsearch/elasticsearch:{{ .Version }}
                                    environment:
                                        - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
                                    ports:
                                        - {{.HostIP}}:9200:9200
                                        - {{.HostIP}}:9300:9300
                                    volumes:
                                        - ${SF_ETCDIR}/elasticsearch/config.yml:/usr/share/elasticsearch/config/elasticsearch.yml
                                        - ${SF_LOGDIR}/elasticsearch:/var/log/elasticsearch
                                        - ${SF_VARDIR}/elasticsearch:/usr/share/elasticsearch/data
                                    ulimits:
                                        nproc: 65535
                                        memlock:
                                            soft: -1
                                            hard: -1
                                    cap_add:
                                        - ALL
                                    network_mode: "host"
                                    restart: always
                            EOF
                            chown safescale:safescale ${SF_ETCDIR}/elasticsearch/docker-compose.yml
                            chmod u+rw-x,g+r-wx,o-rwx ${SF_ETCDIR}/elasticsearch/docker-compose.yml
                            exit 0

                    start:
                        targets:
                            hosts: yes
                            masters: all
                            nodes: no
                        run: |
                            {{ if .ClusterFlavor }}
                            OPTIONS="-p elasticsearch4safescale"
                            {{ else }}
                            OPTIONS=
                            {{ end }}
                            docker-compose -f ${SF_ETCDIR}/elasticsearch/docker-compose.yml $OPTIONS up -d || exit 195
                            exit 0

                    running:
                        targets:
                            hosts: yes
                            masters: all
                            nodes: no
                        run: |
                            {{ if .ClusterFlavor }}
                            PREFIX="elasticsearch4safescale"
                            {{ else }}
                            PREFIX="elasticsearch"
                            {{ end }}
                            sfRetry 5m 5 "sfDoesDockerRun docker.elastic.co/elasticsearch/elasticsearch:{{ .Version }} ${PREFIX}_server_1"

                    ready:
                        targets:
                            hosts: yes
                            masters: any
                            nodes: no
                        run: |
                            {{ if .ClusterFlavor }}
                            URL="https://{{.GatewayIP}}/monitoring/elasticsearch/_cat/health"
                            {{ else }}
                            URL="http://{{.HostIP}}:9200/_cat/health"
                            {{ end }}
                            sfRetry 5m 5 "curl -k ${URL} &>/dev/null" || exit 196
                            exit 0

            remove:
                pace: stop,remove
                steps:
                    stop:
                        targets:
                            hosts: yes
                            masters: all
                            nodes: no
                        run: |
                            {{ if .ClusterFlavor }}
                            OPTIONS="-p elasticsearch4safescale"
                            {{ else }}
                            OPTIONS=
                            {{ end }}
                            docker-compose -f ${SF_ETCDIR}/elasticsearch/docker-compose.yml $OPTIONS rm --stop -v --force || exit 197
                            exit 0

                    remove:
                        targets:
                            hosts: yes
                            masters: all
                            nodes: no
                        run: |
                            docker image rm -f docker.elastic.co/elasticsearch/elasticsearch:{{ .Version }}
                            purge={{ .KeepDataOnRemoval }}
                            purge=${purge,,}
                            [ "$purge" = "yes" ] && rm -rf ${SF_ETCDIR}/elasticsearch ${SF_VARDIR}/elasticsearch
                            exit 0

    proxy:
        rules:
            - name: elasticsearch_http_svc
              type: service
              targets:
                  hosts: true
                  masters: all
              content: |
                  {
                      "name": "elasticsearch_http_{{ .Hostname }}",
                      "url": "http://{{ .HostIP }}:9200/"
                  }

            # - name: elasticsearch_transport_svc
            #   type: service
            #   targets:
            #       hosts: true
            #       masters: all
            #   content: |
            #       {
            #           "name": "elasticsearch_transport_{{ .Hostname }}",
            #           "url": "http://{{ .HostIP }}:9300/"
            #       }

            - name: elasticsearch_http_route
              type: route
              targets:
                  hosts: true
                  masters: all
              content: |
                  {
                      "paths": ["/monitoring/elasticsearch/"],
                      "service": { "id": "{{ .elasticsearch_http_svc }}" }
                  }

...