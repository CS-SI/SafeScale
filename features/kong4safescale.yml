#
# Copyright 2018-2020, CS Systemes d'Information, http://www.c-s.fr
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

---
feature:
    suitableFor:
        host: no
        cluster: swarm

    requirements:
        features:
            - postgresxl4safescale

    install:
        bash:
            check:
                pace: curl
                steps:
                    curl:
                        targets:
                            hosts: no
                            gateways: no
                            masters: all
                            nodes: no
                        run: |
                            curl -Ssl -I -k https://localhost:8444/ 2>&1 | grep "HTTP/1.1 200 OK" &>/dev/null

            add:
                pace: image,stack,secret,start
                steps:
                    image:
                        timeout: 10
                        targets:
                            hosts: no
                            gateways: no
                            masters: all
                            nodes: no
                        run: |
                            mkdir -p ${SF_ETCDIR}/kong4safescale/{build,includes}

                            cat >${SF_ETCDIR}/kong4safescale/build/my-docker-entrypoint.sh <<-'EOF'
                            #!/bin/bash

                            export KONG_PG_PASSWORD="$(cat /run/secrets/safescale.kong.db_password)"
                            export ADMIN_PG_PASSWORD="$(cat /run/secrets/safescale.postgresxl.password)"

                            # creates $HOME/.pgpass
                            cat >$HOME/.pgpass <<-EOF2
                            *:5432:*:postgres:${ADMIN_PG_PASSWORD}
                            *:5432:kong4safescale:kong4safescale:${KONG_PG_PASSWORD}
                            EOF2
                            chmod 0600 $HOME/.pgpass && chown $(id -un):$(id -gn) /root/.pgpass

                            PSQL="psql -h postgresxl4safescale_coordinator -U postgres"

                            # wait for database server
                            echo "Waiting for database server..."
                            op=-1
                            timeout 60 sh -c "while ! $PSQL -c 'select 1' >/dev/null; do sleep 5; done" && op=$? || true
                            [ $op -ne 0 ] && echo "Database exited to respond in 60s, aborting." && sfFail 1
                            echo "Database server ready."

                            case \$1 in
                                dbinit)
                                    # Create database if needed
                                    if ! $PSQL kong4safescale -c '\q' &>/dev/null; then
                                        echo "Creating database kong4safescale..."
                                        $PSQL -c "CREATE DATABASE kong4safescale;"
                                        $PSQL -c "CREATE USER kong4safescale;"
                                        # $PSQL "CREATE DATABASE kong4safescale-gui;"
                                        echo Done
                                    fi
                                    sfExit
                                    ;;

                                proxy)
                                    # Waits for database creation
                                    echo "Waiting for database creation..."
                                    while ! $PSQL kong4safescale -c '\q' &>/dev/null; do sleep 5; done
                                    echo "Database is created, continue."

                                    # init/reset kong4safescale password and db ownership
                                    echo "Resetting password and ownership..."
                                    $PSQL -c "ALTER USER kong4safescale PASSWORD '$(cat /run/secrets/safescale.kong.db_password)';"
                                    $PSQL -c "ALTER DATABASE kong4safescale OWNER TO kong4safescale;"
                                    # $PSQL -c "ALTER DATABASE kong4safescale-gui OWNER TO kong_4_safescale;"
                                    echo Done

                                    # kong migrations
                                    echo "Running Kong migrations..."
                                    /docker-entrypoint.sh kong migrations bootstrap >/dev/null
                                    /docker-entrypoint.sh kong migrations up >/dev/null
                                    /docker-entrypoint.sh kong migrations finish >/dev/null
                                    echo Done.

                                    # starts kong
                                    exec /docker-entrypoint.sh \$*
                                    ;;
                            esac

                            echo "Neither 'dbinit' nor 'proxy' parameter provided, stopping.""
                            sfExit
                            EOF

                            # cat >${SF_ETCDIR}/kong4safescale/konga.userdb.data <<-EOF
                            # module.exports = [
                            #     {
                            #         "username": "safescale",
                            #         "email": "{{ .ClusterAdminUsername }}@safescale",
                            #         "firstName": "SafeScale",
                            #         "lastName": "Administrator",
                            #         "node_id": "https://127.0.0.1:8444",
                            #         "admin": true,
                            #         "active" : true,
                            #         "password": "{{.Password}}"
                            #     }
                            # ]
                            # EOF
                            # chmod go-rwx ${SF_ETCDIR}/kong4safescale/konga.userdb.data

                            cat >${SF_ETCDIR}/kong4safescale/build/kong.conf <<-EOF
                            trusted_ips=0.0.0.0/0,::/0
                            real_ip_header=X-Forwarded-For
                            real_ip_recursive=on
                            stream_listen = 0.0.0.0:6442
                            nginx_stream_include = /etc/kong/includes/*.conf
                            anonymous_reports = off
                            EOF

                            cat >${SF_ETCDIR}/kong4safescale/build/Dockerfile <<-EOF
                            FROM kong:1.3

                            RUN apk update && apk add git unzip postgresql-client bash
                            RUN luarocks install kong-oidc \
                             && luarocks install kong-prometheus-plugin

                            RUN mkdir -p /etc/kong/includes \
                             && setcap CAP_NET_BIND_SERVICE=+ep /usr/local/openresty/nginx/sbin/nginx

                            COPY my-docker-entrypoint.sh /
                            COPY kong.conf /etc/kong/kong.conf
                            RUN chmod a+rx /my-docker-entrypoint.sh \
                             && chmod a+r /etc/kong/kong.conf

                            ENV KONG_DATABASE=postgres
                            ENV KONG_PG_HOST=postgresxl4safescale_coordinator
                            ENV KONG_PG_USER=kong4safescale
                            ENV KONG_PG_DATABASE=kong4safescale
                            ENV KONG_PROXY_ACCESS_LOG=/dev/stdout
                            ENV KONG_ADMIN_ACCESS_LOG=/dev/stdout
                            ENV KONG_PROXY_ERROR_LOG=/dev/stderr
                            ENV KONG_ADMIN_ERROR_LOG=/dev/stderr
                            ENV KONG_ADMIN_LISTEN="0.0.0.0:8444 ssl"
                            ENV KONG_PROXY_LISTEN="0.0.0.0:443 ssl"
                            ENV KONG_PLUGINS=oidc,prometheus,ip-restriction

                            ENTRYPOINT ["/my-docker-entrypoint.sh"]

                            CMD ["kong", "docker-start"]
                            EOF
                            docker build --network host -t kong4safescale:latest ${SF_ETCDIR}/kong4safescale/build || sfFail 192
                            sfExit

                    stack:
                        targets:
                            hosts: no
                            gateways: no
                            masters: any
                            nodes: no
                        run: |
                            cat >${SF_ETCDIR}/kong4safescale/stack.yml <<-EOF
                            version: '3.3'
                            services:
                                dbinit:
                                    image: kongdb4safescale:latest
                                    command: dbinit
                                    networks:
                                        - postgresxl4safescale_net
                                    deploy:
                                        mode: replicated
                                        placement:
                                            constraints:
                                                - node.role == manager
                                        restart_policy:
                                            condition: none
                                    secrets:
                                        - safescale.postgresxl.password
                                        - safescale.kong.db_password

                                proxy:
                                    image: kong4safescale:latest
                                    command: proxy
                                    volumes:
                                        - ${SF_ETCDIR}/kong4safescale/includes:/etc/kong/includes:ro
                                    networks:
                                        - postgresxl4safescale_net
                                    ports:
                                        - published: 443
                                          target: 443
                                          mode: host
                                        - published: 6443
                                          target: 6443
                                          mode: host
                                        - published: 8444
                                          target: 8444
                                          mode: host
                                    deploy:
                                        mode: global
                                        placement:
                                            constraints:
                                                - node.role == manager
                                        resources:
                                            limits:
                                                memory: 256M
                                            reservations:
                                                memory: 64M
                                        restart_policy:
                                            condition: on-failure
                                            delay: 2s
                                            max_attempts: 3
                                            window: 120s
                                    # healthcheck:
                                    #     test: ["CMD-SHELL", "curl -I -s -k -L https://127.0.0.1:8444 || sfFail 1"]
                                    #     interval: 5s
                                    #     retries: 10
                                    secrets:
                                        - safescale.postgresxl.password
                                        - safescale.kong.db_password

                            secrets:
                                safescale.postgresxl.password:
                                    external: true
                                safescale.kong.db_password:
                                    external: true

                            networks:
                                postgresxl4safescale_net:
                                    external: true
                            EOF

                                # gui:
                                #     image: pantsel/konga
                                #     volumes:
                                #         - ${SF_ETCDIR}/kong4safescale/konga.userdb.data:/usr/local/etc/userdb.data:ro
                                #     environment:
                                #         - TOKEN_SECRET="$(sfRandomString 32 [:alnum:])"
                                #         - DB_ADAPTER=postgres
                                #         - DB_DATABASE=kong4gateway-gui
                                #         - DB_USER=kong4gateway
                                #         - DB_PASSWORD="${DB_PASSWORD}"
                                #         - NODE_ENV=production
                                #         - KONGA_SEED_USER_DATA_SOURCE_FILE=/usr/local/etc/userdb.data
                                #     network:
                                #         - safescale-gw
                                #     ports:
                                #         - target: 1337
                                #           published: 1337
                                #           protocol: tcp
                                #           mode: "host"
                                #     deploy:
                                #         mode: global
                                #         placement:
                                #             constraints:
                                #                 - node.role == manager
                                #         restart_policy:
                                #             condition: on-failure
                                #             delay: 5s
                                #             max_attempts: 3
                                #             window: 120s

                            chmod go-rwx ${SF_ETCDIR}/kong4safescale/stack.yml
                            sfExit

                    secret:
                        targets:
                            hosts: no
                            gateways: no
                            masters: any
                            nodes: no
                        run: |
                            docker secret rm safescale.kong.db_password &>/dev/null || true
                            echo -n "$(sfRandomString 16 "[:alnum:]")" | docker secret create safescale.kong.db_password - &>/dev/null || sfFail 193
                            sfExit

                    start:
                        targets:
                            hosts: no
                            gateways: no
                            masters: any
                            nodes: no
                        run: |
                            docker stack deploy -c ${SF_ETCDIR}/kong4safescale/stack.yml kong4safescale || sfFail 194
                            sfRetry 5m 5 "sfDoesDockerRunService kong4safescale:latest kong4safescale_proxy" || sfFail 195
                            sfExit

            remove:
                pace: stop,cleanup
                steps:
                    stop:
                        targets:
                            hosts: no
                            gateways: no
                            masters: any
                            nodes: no
                        run: |
                            docker stack rm kong4safescale  || sfFail 196
                            docker secret rm safescale.kong.db_password &>/dev/null
                            sfExit

                    cleanup:
                        targets:
                            hosts: no
                            gateways: no
                            masters: all
                            nodes: no
                        run: |
                            sfRemoveDockerImage kong4gateway:latest
                            rm -rf ${SF_ETCDIR}/kong4safescale
                            sfExit

...