#
# Copyright 2018-2019, CS Systemes d'Information, http://www.c-s.fr
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

---
feature:
    suitableFor:
        host: no
        cluster: all
    requirements:
        features:
            - postgresql4platform

    parameters:
        - KeycloakAdminPassword

    install:
        bash:
            check:
                pace: curl
                steps:
                    curl:
                        targets:
                            hosts: no
                            gateways: no
                            masters: all
                            nodes: no
                        run: |
                            curl -Ssl -I -k https://{{ .HostIP }}:8443/auth/ 2>&1 | grep "HTTP/2 200" &>/dev/null

            add:
                pace: image,secret,stack,pgsql,pgpool,start
                steps:
                    image:
                        targets:
                            masters: all
                        run: |
                            mkdir -p ${SF_ETCDIR}/keycloak4platform/build

                            cat >${SF_ETCDIR}/keycloak4platform/build/standalone-ha.xml.patch <<-'EOF'
                            --- standalone-ha.xml	2019-07-10 15:45:31.706239257 +0200
                            +++ standalone-ha.xml.new	2019-07-10 15:46:06.850275164 +0200
                            @@ -52,6 +52,13 @@
                                                <properties path="application-roles.properties" relative-to="jboss.server.config.dir"/>
                                            </authorization>
                                        </security-realm>
                            +            <security-realm name="KeycloakRealm">
                            +                <server-identities>
                            +                    <ssl>
                            +                        <keystore path="safescale.jks" relative-to="jboss.server.config.dir" keystore-password="safescale" />
                            +                    </ssl>
                            +                </server-identities>
                            +            </security-realm>
                                    </security-realms>
                                    <audit-log>
                                        <formatters>
                            @@ -126,18 +133,29 @@
                                                    <password>sa</password>
                                                </security>
                                            </datasource>
                            -                <datasource jndi-name="java:jboss/datasources/KeycloakDS" pool-name="KeycloakDS" enabled="true" use-java-context="true">
                            -                    <connection-url>jdbc:h2:${jboss.server.data.dir}/keycloak;AUTO_SERVER=TRUE</connection-url>
                            -                    <driver>h2</driver>
                            +                <datasource jndi-name="java:jboss/datasources/KeycloakDS" pool-name="KeycloakDS" enabled="true" use-java-context="true" use-ccm="true">
                            +                    <connection-url>jdbc:postgresql://${env.DB_ADDR:postgres}:${env.DB_PORT:5432}/${env.DB_DATABASE:keycloak}${env.JDBC_PARAMS:}</connection-url>
                            +                    <driver>postgresql</driver>
                            +                    <pool>
                            +                        <flush-strategy>IdleConnections</flush-strategy>
                            +                    </pool>
                                                <security>
                            -                        <user-name>sa</user-name>
                            -                        <password>sa</password>
                            +                        <user-name>${env.DB_USER:keycloak}</user-name>
                            +                        <password>${env.DB_PASSWORD:password}</password>
                                                </security>
                            +                    <validation>
                            +                        <check-valid-connection-sql>SELECT 1</check-valid-connection-sql>
                            +                        <background-validation>true</background-validation>
                            +                        <background-validation-millis>60000</background-validation-millis>
                            +                    </validation>
                                            </datasource>
                                            <drivers>
                                                <driver name="h2" module="com.h2database.h2">
                                                    <xa-datasource-class>org.h2.jdbcx.JdbcDataSource</xa-datasource-class>
                                                </driver>
                            +                    <driver name="postgresql" module="org.postgresql.jdbc">
                            +                        <xa-datasource-class>org.postgresql.xa.PGXADataSource</xa-datasource-class>
                            +                    </driver>
                                            </drivers>
                                        </datasources>
                                    </subsystem>
                            @@ -590,11 +608,11 @@
                                        <buffer-cache name="default"/>
                                        <server name="default-server">
                                            <ajp-listener name="ajp" socket-binding="ajp"/>
                            -                <http-listener name="default" socket-binding="http" redirect-socket="https" proxy-address-forwarding="${env.PROXY_ADDRESS_FORWARDING:false}" enable-http2="true"/>
                            -                <https-listener name="https" socket-binding="https" proxy-address-forwarding="${env.PROXY_ADDRESS_FORWARDING:false}" security-realm="ApplicationRealm" enable-http2="true"/>
                            +                <http-listener name="default" socket-binding="http" redirect-socket="proxy-https" proxy-address-forwarding="${env.PROXY_ADDRESS_FORWARDING:false}" enable-http2="true"/>
                            +                <https-listener name="https" socket-binding="https" proxy-address-forwarding="${env.PROXY_ADDRESS_FORWARDING:false}" security-realm="KeycloakRealm" enable-http2="true"/>
                                            <host name="default-host" alias="localhost">
                                                <location name="/" handler="welcome-content"/>
                            -                    <http-invoker security-realm="ApplicationRealm"/>
                            +                    <http-invoker security-realm="KeycloakRealm"/>
                                            </host>
                                        </server>
                                        <servlet-container name="default">
                            @@ -629,8 +647,9 @@
                                    <socket-binding name="modcluster" multicast-address="${jboss.modcluster.multicast.address:224.0.1.105}" multicast-port="23364"/>
                                    <socket-binding name="txn-recovery-environment" port="4712"/>
                                    <socket-binding name="txn-status-manager" port="4713"/>
                            +        <socket-binding name="proxy-https" port="443"/>
                                    <outbound-socket-binding name="mail-smtp">
                                        <remote-destination host="localhost" port="25"/>
                                    </outbound-socket-binding>
                                </socket-binding-group>
                            -</server>
                            \ Pas de fin de ligne Ã  la fin du fichier
                            +</server>
                            EOF

                            cat >${SF_ETCDIR}/keycloak4platform/build/my-docker-entrypoint.sh <<-'EOF'
                            #!/bin/bash

                            export ADMIN_PG_PASSWORD="$(cat /run/secrets/password.postgres)"
                            export DB_PASSWORD="$(cat /run/secrets/password.dbuser)"
                            export DB_VENDOR=POSTGRES
                            export DB_ADDR={{.DefaultRouteIP}}
                            export DB_DATABASE=keycloak4platform
                            export DB_USER=keycloak4platform
                            export KEYCLOAK_USER=admin
                            export KEYCLOAK_PASSWORD="$(cat /run/secrets/password.admin)"
                            export CACHE_OWNERS_COUNT={{ len .MasterIPs }}
                            export CACHE_OWNERS_AUTH_SESSIONS_COUNT={{ len .MasterIPs }}

                            cat >/root/.pgpass <<-EOF2
                            *:5432:*:postgres:$ADMIN_PG_PASSWORD
                            *:5432:keycloak4platform:keycloak4platform:$DB_PASSWORD
                            EOF2
                            chmod 0600 /root/.pgpass

                            PSQL="psql -h {{ .DefaultRouteIP}} -p 63008 -U postgres -c"

                            # wait for database server
                            echo "Waiting for database server..."
                            op=-1
                            timeout 60 bash -c "while ! $PSQL 'select 1' >/dev/null; do sleep 5; done" && op=$? || true
                            if [ $op -ne 0 ] && echo "Database server not ready for 60s. Aborting." && sfFail 1
                            echo "Database server ready."

                            # # Create database if needed
                            # if ! $PSQL $DB_DATABASE -c '\q' &>/dev/null; then
                            #     echo "Creating database keycloak4platform..."
                            #     cat  <<-SQLEOF | $PSQL
                            # CREATE DATABASE $DB_DATABASE;
                            # CREATE USER $DB_USER;
                            # SQLEOF
                            #     echo Done
                            # fi

                            # Update ownership and DB_USER password
                            echo "Reset $DB_USER password..."
                            $PSQL "ALTER USER $DB_USER PASSWORD '${DB_PASSWORD}';"
                            $PSQL "ALTER DATABASE $DB_DATABASE OWNER TO $DB_USER;"
                            echo Done

                            exec /opt/jboss/tools/docker-entrypoint.sh $@
                            EOF

                            cat >${SF_ETCDIR}/keycloak4platform/build/Dockerfile <<-'EOF'
                            FROM jboss/keycloak:4.8.3.Final

                            WORKDIR /opt/jboss
                            USER root

                            # need psql in my-docker-entrypoint.sh and patch
                            RUN rpm -Uvh https://yum.postgresql.org/10/redhat/rhel-7-x86_64/pgdg-centos10-10-2.noarch.rpm \
                             && yum install -qy postgresql10 patch

                            # Generates SSL certificates
                            RUN openssl req -x509 -newkey rsa:4096 -keyout safescale_key.pem -out safescale_cert.pem -days 90 -nodes -subj "/C=FR/ST=France/O=CS-SI/CN={{ .HostIP }}" \
                             && openssl pkcs12 -export -name server-cert -in safescale_cert.pem -inkey safescale_key.pem -out safescale_keystore.p12 -password pass:safescale \
                             && keytool -importkeystore -destkeystore safescale.jks -srckeystore safescale_keystore.p12 -srcstoretype pkcs12 -alias server-cert -storepass safescale -keypass safescale -srcstorepass safescale \
                             && cp ./safescale.jks keycloak/standalone/configuration/ \
                             && chown jboss:jboss keycloak/standalone/configuration/safescale.jks

                            # Updates configuration
                            COPY standalone-ha.xml.patch keycloak/standalone/configuration/
                            RUN cd keycloak/standalone/configuration/ \
                             && patch -l <./standalone-ha.xml.patch \
                             && chown jboss:jboss standalone-ha.xml

                            COPY my-docker-entrypoint.sh /
                            RUN chmod 0550 /my-docker-entrypoint.sh
                            ENTRYPOINT [ "/my-docker-entrypoint.sh" ]
                            CMD ["-b", "0.0.0.0"]
                            EOF

                            docker build --network host -t keycloak4platform:latest ${SF_ETCDIR}/keycloak4platform/build || sfFail 192
                            sfExit

                    secret:
                        targets:
                            hosts: no
                            gateways: no
                            masters: any
                            nodes: no
                        run: |
                            docker secret rm safescale.keycloak.password.dbuser safescale.keycloak.password.admin &>/dev/null || true
                            echo -n "$(sfRandomString 16 "[:alnum:]")" | docker secret create safescale.keycloak.password.dbuser - || sfFail 193
                            echo -n "{{ .KeycloakAdminPassword }}" | docker secret create safescale.keycloak.password.admin - || sfFail 194
                            sfExit

                    pgsql:
                        targets:
                            masters: any
                        run: |
                            sfPsqlCreateDatabase keycloak4platform
                            echo -n "{{ .KeycloakdAdminPassword }}" | sfPsqlCreateRole keycloak4platform LOGIN || sfFail 196
                            sfExit

                    pgpool:
                        targets:
                            masters: all
                        run: |
                            echo -n "{{ .KeycloakdAdminPassword }}" | sfPgpoolUpdatePassword keycloak4platform || sfFail 197
                            sfExit

                    stack:
                        targets:
                            masters: all
                        run: |
                            cat >${SF_ETCDIR}/keycloak4platform/stack.yml <<-EOF
                            version: '3.3'
                            services:
                                server:
                                    image: keycloak4platform:latest
                                    environment:
                                        - PROXY_ADDRESS_FORWARDING=true
                                        # - KEYCLOAK_LOGLEVEL=DEBUG
                                        # - ROOT_LOGLEVEL=DEBUG
                                    ports:
                                        - published: 8443
                                          target: 8443
                                          mode: host
                                    deploy:
                                        mode: global
                                        placement:
                                            constraints:
                                                - node.role == manager
                                        restart_policy:
                                            condition: on-failure
                                            delay: 5s
                                            max_attempts: 3
                                            window: 120s
                                    secrets:
                                        - password.postgres
                                        - password.dbuser
                                        - password.admin

                            secrets:
                                password.postgres:
                                    external: true
                                    name: safescale.postgresql.password.postgres
                                password.dbuser:
                                    external: true
                                    name: safescale.keycloak.password.dbuser
                                password.admin:
                                    external: true
                                    name: safescale.keycloak.password.admin
                            EOF

                    start:
                        targets:
                            masters: any
                        run: |
                            docker stack deploy -c ${SF_ETCDIR}/keycloak4platform/stack.yml keycloak4platform || sfFail 197
                            sfRetry 5m 5 "sfDoesDockerRunStack keycloak4platform" || sfFail 198
                            sfExit

            remove:
                pace: stack,cleanup
                steps:
                    stack:
                        targets:
                            masters: any
                        run: |
                            docker stack rm keycloak4platform || sfFail 199
                            docker secret rm safescale.keycloak.password.dbuser safescale.keycloak.password.admin &>/dev/null
                            sfPgsqlDropDatabase keycloak4platform
                            sfPgsqlDropRole keycloak4platform
                            sfExit

                    cleanup:
                        targets:
                            hosts: no
                            gateways: no
                            masters: all
                            nodes: no
                        run: |
                            sfRemoveDockerImage keycloak4platform:latest
                            rm -drf ${SF_ETCDIR}/keycloak4platform ${SF_VARDIR}/keycloak4platform
                            sfExit

    proxy:
        rules:
            - name: keycloak4platform_backend
              type: upstream
              targets:
                  masters: all
              content: |
                  {
                      "target": "{{.HostIP}}:8443",
                      "weight": 100
                  }

            - name: keycloak4platform_svc
              type: service
              targets:
                  masters: any
              content: |
                  {
                      "protocol": "https",
                      "host": "keycloak4platform_backend"
                  }

            - name: keycloak4platform_route
              type: route
              targets:
                  masters: any
              content: |
                  {
                        "paths": [ "/auth/" ],
                        "strip_path": false,
                        "protocols":["https"],
                        "service": { "id": "{{ .keycloak4platform_svc }}" }
                  }

...
