#
# Copyright 2018-2020, CS Systemes d'Information, http://www.c-s.fr
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

---
feature:
    suitableFor:
        host: yes
        cluster: all
    requirements:
        features:
            - docker
            - kong

    parameters:
        - KeepDataOnRemoval=yes
        - ClusterName=safescale

    install:
        bash:
            check:
                pace: present
                steps:
                    present:
                        targets:
                            hosts: yes
                            masters: all
                            nodes: no
                        run: |
                            [ -d ${SF_ETC_DIR}/elassandra ] || sfFail 192
                            docker image ls {{ "--format '{{.Repository}}:{{.Tag}}'" }} | grep 'strapdata/elassandra:6' &>/dev/null || sfFail 193
                            sfExit

            add:
                pace: image,config,start,ready
                steps:
                    image:
                        targets:
                            hosts: yes
                            masters: all
                            nodes: no
                        run: |
                            docker pull strapdata/elassandra:6

                    config:
                        targets:
                            hosts: yes
                            masters: all
                            nodes: no
                        run: |
                            mkdir -p ${SF_ETCDIR}/elassandra ${SF_VARDIR}/elassandra

                            {{- if .ClusterFlavor }}
                            seeds="{{- range .ClusterMasterIPs }}{{.}},{{ end -}}"
                            seeds=${seeds%,}
                            {{ end -}}
                            cat >${SF_ETCDIR}/elassandra/docker-compose.yml <<EOF
                            version: '2.1'

                            services:
                                server:
                                    image: 'strapdata/elassandra:6'
                                    ports:
                                        - {{.HostIP}}:7000:7000
                                        - {{.HostIP}}:7001:7001
                                        - {{.HostIP}}:7199:7199
                                        - {{.HostIP}}:9042:9042
                                        - {{.HostIP}}:9142:9142
                                        - {{.HostIP}}:9160:9160
                                        - {{.HostIP}}:9200:9200
                                        - {{.HostIP}}:9300:9300
                                    environment:
                                    {{ if .ClusterFlavor }}
                                        - CASSANDRA_SEEDS=${seeds}
                                        - CASSANDRA__cluster_name=safescale
                                    {{ end }}
                                    volumes:
                                        - ${SF_VARDIR}/elassandra:/var/lib/cassandra
                                    restart: always

                            EOF
                            sfExit

                    start:
                        targets:
                            hosts: yes
                            masters: all
                            nodes: no
                        run: |
                            {{ if .ClusterFlavor }}
                            OPTIONS="-p elassandra4safescale"
                            {{ else }}
                            OPTIONS=
                            {{ end }}
                            docker-compose -f ${SF_ETCDIR}/elassandra/docker-compose.yml $OPTIONS up -d

                    ready:
                        targets:
                            hosts: yes
                            masters: any
                            nodes: no
                        run: |
                            {{ if .ClusterFlavor }}
                            PREFIX="elassandra4safescale"
                            {{ else }}
                            PREFIX="elassandra"
                            {{ end }}
                            sfRetry 5m 5 docker inspect {{ "--format='{{.State.Status}}'" }} ${PREFIX}_server_1 | grep running

            remove:
                pace: stop,remove
                steps:
                    stop:
                        targets:
                            hosts: yes
                            masters: all
                            nodes: all
                        run: |
                            {{ if .ClusterFlavor }}
                            OPTIONS="-p elassandra4safescale"
                            {{ else }}
                            OPTIONS=
                            {{ end }}
                            docker-compose -f ${SF_ETCDIR}/elassandra/docker-compose.yml $OPTIONS rm --stop -v --force || sfFail 192

                    remove:
                        targets:
                            hosts: yes
                            masters: all
                            nodes: all
                        run: |
                            docker image rm -f strapdata/elassandra:6
                            purge={{.KeepDataOnRemoval}}
                            purge=${purge,,}
                            [ "$purge" = "yes" ] && rm -rf ${SF_ETCDIR}/elassandra ${SF_VARDIR}/elassandra
                            sfExit

    proxy:
        rules:
            - name: elassandra_http_svc
              type: service
              targets:
                  hosts: true
                  masters: all
              content: |
                  {
                      "name": "elassandra_http_{{.Hostname}}",
                      "url": "http://{{.HostIP}}:9200/"
                  }

            - name: elassandra_transport_svc
              type: service
              targets:
                  hosts: true
                  masters: all
              content: |
                  {
                      "name": "elassandra_transport_{{.Hostname}}",
                      "url": "http://{{.HostIP}}:9300/"
                  }

            - name: elassandra_http_route
              type: route
              targets:
                  hosts: true
                  masters: all
              content: |
                  {
                      "paths": ["/elassandra/"],
                      "service": { "id": "{{.elassandra_http_svc}}" }
                  }

...