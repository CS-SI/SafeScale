#
# Copyright 2018-2019, CS Systemes d'Information, http://www.c-s.fr
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

---
feature:
    suitableFor:
        cluster: K8S

    parameters:
        - ReleaseName=zookeeper
        - Namespace=default
        - ChartVersion=0.7.0
        - HelmRepoName=bitnami

    requirements:
        - kubernetes
        - k8s.helm
        - k8s.bitnami-helm-repo

    install:
        bash:
            check:
                pace: helm
                steps:
                    helm:
                        targets:
                            masters: any
                        run: |
                            sfHelm list -n {{ .Namespace }} {{ .ReleaseName }} || sfFail 192
                            sfExit

            add:
                pace: helm
                steps:
                    helm:
                        targets:
                            masters: any
                        run: |
                            cat >values.yaml <<EOF
                            affinity:
                              nodeAffinity:
                                requiredDuringSchedulingIgnoredDuringExecution:
                                  nodeSelectorTerms:
                                  - matchExpressions:
                                    - key: "node-role.kubernetes.io/worker"
                                      operator: In
                                      values:
                                      - infra
                              podAntiAffinity:
                                requiredDuringSchedulingIgnoredDuringExecution:
                                - labelSelector:
                                    matchExpressions:
                                    - key: "app.kubernetes.io/component"
                                      operator: In
                                      values:
                                      - zookeeper
                                  topologyKey: "kubernetes.io/hostname"
                            EOF

                            REPLICAS="{{ range .ClusterMasterNames }}{{ . }} {{ end }}"
                            REPLICA_COUNT=$(echo -n $REPLICAS | wc -w)

                            sfHelm install {{ .HelmRepoName }}/zookeeper \
                                --version {{ .ChartVersion }} \
                                --name zookeeper \
                                --namespace {{ .Namespace }} \
                                --tls \
                                # --set imagePullSecrets="local-harbor" \
                                # --set image.registry="harbor.${NAMESPACE}.svc.cluster.local/cs/monitoring" \
                                # --set init.registry="harbor.${NAMESPACE}.svc.cluster.local/cs/monitoring/tools" \
                                # --set metrics.image.registry="harbor.${NAMESPACE}.svc.cluster.local/cs/monitoring/prometheus-exporter" \
                                # --set image.tag="${IMAGE_TAG_ZOOKEEPER}" \
                                --set persistence.enabled="true" \
                                --set replicaCount=${REPLICA_COUNT} \
                                --set metrics.enabled="true" \
                                --values values.yaml
                                || sfExit193
                            sfExit

            remove:
                pace: helm
                steps:
                    helm:
                        targets:
                            masters: any
                        run: |
                            sfHelm delete zookeeper || sfFail 192
                            sfExit

---