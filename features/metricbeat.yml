#
# Copyright 2018-2020, CS Systemes d'Information, http://www.c-s.fr
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

---
feature:
    suitableFor:
        host: yes
        cluster: all
    parameters:
        - Version=7.2.0
        - ElasticsearchURL=undefined
        - KibanaURL=undefined

    install:
        bash:
            check:
                pace: docker
                steps:
                    docker:
                        targets:
                            gateways: all
                            hosts: yes
                            masters: all
                            nodes: all
                        run: |
                            sfDoesDockerRunContainer docker.elastic.co/beats/metricbeat:{{ .Version }} metricbeat_agent_1 || sfFail 192
                            sfExit

            add:
                pace: config,compose,start
                steps:
                    config:
                        targets:
                            gateways: all
                            hosts: yes
                            masters: all
                            nodes: all
                        run: |
                            mkdir -p ${SF_ETCDIR}/metricbeat/modules.d

                            cat >${SF_ETCDIR}/metricbeat/modules.d/system.yml <<-'EOF'
                            - module: system
                              enabled: true
                              metricsets: ["cpu", "load", "memory", "network", "process", "process_summary", "core", "diskio", "socket"]
                              processes: ['.*']
                              process.include_top_n:
                                  by_cpu: 5
                                  by_memory: 5
                              period: 10s
                              cpu.metrics:  ["percentages"]
                              core.metrics: ["percentages"]

                            - module: system
                              enabled: true
                              period: 1m
                              metricsets:
                                  - filesystem
                                  - fsstat
                              processors:
                                  - drop_event.when.regexp:
                                        system.filesystem.mount_point: '^/(sys|cgroup|proc|dev|etc|host|lib)($|/)'

                            - module: system
                              enabled: true
                              period: 15m
                              metricsets:
                                  - uptime
                            EOF

                            cat >${SF_ETCDIR}/metricbeat/modules.d/docker.yml <<-'EOF'
                            - module: docker
                              metricsets: ["container", "cpu", "diskio", "healthcheck", "info", "memory", "network", "image"]
                              hosts: ["unix:///var/run/docker.sock"]
                              period: 10s
                              enabled: true
                            EOF

                            cat >${SF_ETCDIR}/metricbeat/config.yml <<-'EOF'
                            metricbeat:
                                config:
                                    modules:
                                        path: ${path.config}/modules.d/*.yml
                                        reload.enabled: true
                                        reload.period: 10s
                                autodiscover:
                                    providers:
                                        - type: docker
                                          hints.enabled: true

                            system.hostsfs: /hostfs

                            processors:
                            - add_docker_metadata: ~
                            - add_locale: ~

                            output.elasticsearch:
                                hosts:
                            {{ if eq .ElasticsearchURL "undefined" }}
                              {{- if .ClusterFlavor }}
                                {{- range .MasterIPs }}
                                    - "http://{{ . }}:9200/"
                                {{ end -}}
                              {{ else }}
                                    - "http://{{ .HostIP }}:9200/"
                              {{ end -}}
                            {{ else }}
                                    - "{{ .ElasticsearchURL }}"
                            {{ end }}
                            setup.dashboards:
                                enabled: true
                            setup.kibana:
                            {{ if eq .KibanaURL "undefined" }}
                              {{ if .ClusterFlavor }}
                                host: "https://{{ .DefaultRouteIP }}/monitoring/kibana/"
                              {{ else }}
                                host: "http://{{ .HostIP }}:5061/"
                              {{ end }}
                            {{ else }}
                                host: "{{ .KibanaURL }}"
                            {{ end }}
                            xpack:
                                monitoring.enabled: true
                                ml.enabled: false
                            EOF
                            chown -R {{ .Username }}:{{ .Username }} ${SF_ETCDIR}/metricbeat
                            chmod u+rw-x,g+r-wx,o-rwx ${SF_ETCDIR}/metricbeat/config.yml

                    compose:
                        targets:
                            gateways: all
                            hosts: yes
                            masters: all
                            nodes: all
                        run: |
                            cat >${SF_ETCDIR}/metricbeat/docker-compose.yml <<-EOF
                            version: '2.1'

                            services:
                                agent:
                                    image: docker.elastic.co/beats/metricbeat:{{ .Version }}
                                    command: "metricbeat -e -strict.perms=false"
                                    volumes:
                                        - ${SF_ETCDIR}/metricbeat/modules.d:/etc/beat/modules.d:ro
                                        - ${SF_ETCDIR}/metricbeat/config.yml:/usr/share/metricbeat/metricbeat.yml:ro
                                        - /var/run/docker.sock:/var/run/docker.sock:ro
                                        - /:/hostfs:ro
                                        - /proc:/hostfs/proc:ro
                                        - /sys/fs/cgroup:/hostfs/sys/fs/cgroup:ro
                                    network_mode: "host"
                                    user: "0:0"
                                    cap_add:
                                        - sys_ptrace
                                        - dac_read_search
                                    restart: always
                            EOF
                            chown -R {{ .Username }}:{{ .Username }} ${SF_ETCDIR}/metricbeat
                            chmod -R u+rw-x,g+r-wx,o-rwx ${SF_ETCDIR}/metricbeat

                    start:
                        targets:
                            gateways: all
                            hosts: yes
                            masters: all
                            nodes: all
                        run: |
                            docker-compose -f ${SF_ETCDIR}/metricbeat/docker-compose.yml -p metricbeat up -d || sfFail 193
                            sfRetry 5m 5 "sfDoesDockerRunContainer docker.elastic.co/beats/metricbeat:{{ .Version }} metricbeat_agent_1" || sfFail 194
                            sfExit

            remove:
                pace: stop,cleanup
                steps:
                    stop:
                        targets:
                            gateways: all
                            hosts: yes
                            masters: all
                            nodes: all
                        run: |
                            docker-compose -f ${SF_ETCDIR}/metricbeat/docker-compose.yml -p metricbeat rm --stop --force || sfFail 195
                            sfExit

                    cleanup:
                        targets:
                            gateways: all
                            hosts: yes
                            masters: all
                            nodes: all
                        run: |
                            docker image rm -f docker.elastic.co/beats/metricbeat:{{ .Version }}
                            rm -rf ${SF_ETCDIR}/metricbeat
                            sfExit

...