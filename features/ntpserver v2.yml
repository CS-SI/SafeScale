#
# Copyright 2018-2019, CS Systemes d'Information, http://www.c-s.fr
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

---
feature:
    suitableFor:
        host: yes
        cluster: all

    parameters:
        PEERS=

    install:
        bash:
            check:
                pace: pkg
                steps:
                    pkg:
                        targets:
                            hosts: yes
                            gateways: no
                            masters: all
                            nodes: no
                        run: |
                            case $LINUX_KIND in
                                debian|ubuntu)
                                    dpkg -l | grep ntp &>/dev/null || sfFail 1
                                    ;;
                                centos|rhel)
                                    rpm -qa | grep ntp &>/dev/null || sfFail 1
                                    ;;
                                *)
                                    echo "Unsupported operating system '$LINUX_KIND'"
                                    sfFail 1
                                    ;;
                            esac
                            sfExit

            add:
                pace: image,start
                steps:
                    image:
                        targets:
                            hosts: yes
                            gateways: no
                            masters: yes
                            nodes: no
                        run: |
                            mkdir -p ${SF_ETCDIR}/ntp-server/build/

                            cat >${SF_ETCDIR}/ntp-server/build/docker-entrypoint.sh <<-'EOF'
                            #!/bin/bash

                            # move aside original config file
                            mv -f /etc/ntpd.conf /etc/ntpd.conf.bak

                            ## dynamically populate ntp config file.
                            cat >/etc/nppd.conf <<-INNEREOF
                            # NTP.conf file generated by startup script located at /opt/docker-entrypoint.sh

                            listen on *

                            INNEREOF

                            IFS=, for i in ${PEERS:-ntp.org}; do
                                echo "server $i" >>/etc/ntpd.conf
                            done

                            # startup ntpd in the foreground
                            exec /usr/sbin/ntpd -v -d -s
                            EOF

                            cat >${SF_ETCDIR}/ntp-server/build/Dockerfile <<-'EOF'
                            FROM alpine:latest

                            # install openntp
                            RUN apk add --no-cache bash openntpd

                            # script to configure/startup ntpd
                            COPY docker-entrypoint.sh /

                            # ntp port
                            EXPOSE 123/udp

                            # let docker know how to test container health
                            HEALTHCHECK CMD ntpctl -s status || exit 1

                            # start ntpd in the foreground
                            ENTRYPOINT [ "/bin/bash", "/docker-entrypoint.sh" ]
                            EOF

                            docker build --network host -t safescale/ntp-server:latest ${SF_ETCDIR}/ntp-server/build || sfFail 192
                            sfExit

                    start:
                        targets:
                            gateways: no
                            hosts: yes
                            masters: all
                            nodes: no
                        run: |
                            cat >${SF_ETCDIR}/ntp-server/docker-compose.yml <<-EOF
                            version: '3.4'

                            services:
                                server:
                                    image: safescale/ntp-server:latest
                                    restart: always
                                    ports:
                                      - {{ .HostIP }}:123:123/udp
                                    cap_add:
                                      - SYS_NICE
                                      - SYS_RESOURCE
                                      - SYS_TIME
                                    environment:
                                      - PEERS={{ .Peers }}
                            EOF
                            docker-compose -f ${SF_ETCDIR}/ntp-server/docker-compose.yml -p ntp up -d || sfFail 193
                            sfExit

            remove:
                pace: stop,cleanup
                steps:
                    stop:
                        targets:
                            hosts: yes
                            gateways: no
                            masters: all
                            nodes: no
                        run: |
                            if [ -f ${SF_ETCDIR}/ntp-server/dock-compose.yml ]; then
                                docker-compose -f ${SF_ETCDIR}/ntp-server/dock-compose.yml -p ntp rm --stop --force || sfFail 192
                            fi
                            sfExit

                    cleanup:
                         targets:
                            hosts: yes
                            gateways: no
                            masters: all
                            nodes: no
                        run: |
                            sfRemoveDockerImage safescale/ntp-server/latest
                            rm -rf ${SF_ETCDIR}/ntp-server
                            sfExit
...