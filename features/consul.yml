#
# Copyright 2018-2019, CS Systemes d'Information, http://www.c-s.fr
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

---
feature:
    suitableFor:
        host: no
        cluster: swarm

    parameters:
        - Version=1.5

    install:
        bash:
            check:
                pace: stack
                steps:
                    stack:
                        targets:
                            gateways: no
                            hosts: no
                            masters: any
                            nodes: no
                        run: |
                            sfDoesDockerRunStack consul4safescale || exit 192
                            exit 0

            add:
                pace: config-all,config-server,config-agent,compose,start,server-started,agent-started
                steps:
                    config-all:
                        targets:
                            gateways: no
                            hosts: no
                            masters: all
                            nodes: all
                        run: |
                            mkdir -p ${SF_ETCDIR}/consul/consul.d ${SF_VARDIR}/consul

                            cat >${SF_ETCDIR}/consul/consul.d/node-exporter.json <<-EOF
                            {
                                "service": {
                                    "name": "node-exporter",
                                    "tags": ["monitor"],
                                    "port": 9100
                                }
                            }
                            EOF
                            exit 0

                    config-server:
                        targets:
                            gateways: no
                            hosts: yes
                            masters: all
                            nodes: no
                        run: |
                            cat >${SF_ETCDIR}/consul/config.json <<-EOF
                            {
                                "advertise_addr" : "{{ "{{ GetInterfaceIP \\\"eth0\\\" }}" }}",
                                "bind_addr": "{{ "{{ GetInterfaceIP \\\"eth0\\\" }}" }}",
                                "client_addr": "0.0.0.0",
                                "data_dir": "/consul/data",
                                "datacenter": "{{ .ClusterName }}",
                                "leave_on_terminate" : true,
                                "retry_join" : [
                                    "consul.server"
                                ],
                                "node_name": "{{ .HostIP }}",
                                "server_name" : "server.{{ .Hostname }}.consul",
                                "skip_leave_on_interrupt" : true,
                            {{- if gt (len .MasterIPs) 1 }}
                                "bootstrap_expect": {{ len .MasterIPs }},
                            {{ end -}}
                                "server" : true,
                                "ui" : true,
                                "autopilot": {
                                    "cleanup_dead_servers": true
                                },
                                "disable_update_check": true,
                                "log_level": "warn",
                                "telemetry": {
                                    "prometheus_retention_time": "2m"
                                }
                            }
                            EOF
                            chmod 0644 ${SF_ETCDIR}/consul/*.json
                            exit 0

                    config-agent:
                        targets:
                            gateways: no
                            hosts: no
                            masters: no
                            nodes: all
                        run: |
                            cat >${SF_ETCDIR}/consul/config.json <<-EOF
                            {
                                "advertise_addr" : "{{ "{{ GetInterfaceIP \\\"eth0\\\" }}" }}",
                                "bind_addr": "{{ "{{ GetInterfaceIP \\\"eth0\\\" }}" }}",
                                "client_addr": "0.0.0.0",
                                "data_dir": "/consul/data",
                                "datacenter": "{{ .ClusterName }}",
                                "retry_join" : [
                                    "consul.server"
                                ],
                                "node_name": "{{ .HostIP }}",
                                "leave_on_terminate" : true,
                                "skip_leave_on_interrupt" : false,
                                "server" : false,
                                "ui" : false,
                                "disable_update_check": true,
                                "log_level": "warn",
                                "telemetry": {
                                    "prometheus_retention_time": "2m"
                                }
                            }
                            EOF
                            chmod 0644 ${SF_ETCDIR}/consul/*.json
                            exit 0

                    compose:
                        targets:
                            gateways: no
                            hosts: no
                            masters: all
                            nodes: all
                        run: |
                            cat >${SF_ETCDIR}/consul/docker-compose.yml <<-EOF
                            version: '3.3'

                            networks:
                                consul-net:
                                    external: true

                            services:
                                server:
                                    image: consul:{{ .Version }}
                                    command: "agent -config-file /consul/config/config.json -config-dir /consul/config/consul.d"
                                    volumes:
                                        - ${SF_ETCDIR}/consul/config.json:/consul/config/config.json:ro
                                        - ${SF_ETCDIR}/consul/consul.d:/consul/config/consul.d
                                        - ${SF_VARDIR}/consul:/consul/data
                                    networks:
                                        consul-net:
                                            aliases:
                                                - consul.server
                                    ports:
                                        - target: 8500
                                          published: 8500
                                          mode: host
                                    deploy:
                                        mode: global
                                        endpoint_mode: dnsrr
                                        update_config:
                                            parallelism: 1
                                            failure_action: rollback
                                            delay: 30s
                                        restart_policy:
                                            condition: any
                                            delay: 5s
                                            window: 120s
                                        placement:
                                            constraints:
                                                - node.role == manager

                                agent:
                                    image: consul:{{ .Version }}
                                    command: "agent -config-file /consul/config/config.json -config-dir /consul/config/consul.d"
                                    networks:
                                        consul-net:
                                            aliases:
                                                - consul.agent
                                    ports:
                                        - target: 8500
                                          published: 8500
                                          mode: host
                                    volumes:
                                        - ${SF_ETCDIR}/consul/config.json:/consul/config/config.json:ro
                                        - ${SF_ETCDIR}/consul/consul.d:/consul/config/consul.d
                                        - ${SF_VARDIR}/consul:/consul/data
                                    deploy:
                                        mode: global
                                        endpoint_mode: dnsrr
                                        update_config:
                                            parallelism: 1
                                            failure_action: rollback
                                            delay: 30s
                                        restart_policy:
                                            condition: any
                                            delay: 5s
                                            window: 120s
                                        placement:
                                            constraints:
                                                - node.role == worker
                            EOF
                            chown safescale:safescale ${SF_ETCDIR}/consul/docker-compose.yml
                            chmod u+rw-x,g+r-wx,o-rwx ${SF_ETCDIR}/consul/docker-compose.yml
                            exit 0

                    start:
                        targets:
                            gateways: no
                            hosts: no
                            masters: any
                            nodes: no
                        run: |
                            if ! docker network ls {{ "--format '{{.Name}}'" }} | grep "^consul-net"; then
                                docker network create -d overlay consul-net || exit 194
                            fi
                            docker stack deploy -c ${SF_ETCDIR}/consul/docker-compose.yml consul4safescale || exit 195
                            exit 0

                    server-started:
                        targets:
                            gateways: no
                            hosts: no
                            masters: any
                            nodes: no
                        run: |
                            sfRetry 5m 5 "sfDoesDockerRunService consul consul4safescale_server" || exit 196
                            exit 0

                    agent-started:
                        targets:
                            gateways: no
                            hosts: no
                            masters: any
                            nodes: no
                        run: |
                            sfRetry 5m 5 "sfDoesDockerRunService consul consul4safescale_agent" || exit 197
                            exit 0

            remove:
                pace: stop,cleanup
                steps:
                    stop:
                        targets:
                            gateways: no
                            hosts: yes
                            masters: any
                            nodes: no
                        run: |
                            docker stack rm consul4safescale || exit 198
                            exit 0

                    cleanup:
                        targets:
                            gateways: no
                            hosts: no
                            masters: all
                            nodes: all
                        run: |
                            sfRemoveDockerImage consul
                            rm -rf ${SF_ETCDIR}/consul ${SF_VARDIR}/consul
                            exit 0

    proxy:
        rules:
            - name: consul_http_backend
              type: upstream
              targets:
                  hosts: no
                  masters: all
              content: |
                  {
                      "target": "{{ .HostIP }}:8500",
                      "weight": 100
                  }

            - name: consul_http_svc
              type: service
              targets:
                  hosts: no
                  masters: one
              content: |
                  {
                      "protocol": "http",
                      "host": "consul_http_backend"
                  }

            - name: consul_http_route
              type: route
              targets:
                  hosts: no
                  masters: one
              content: |
                  {
                      "paths": [
                          "/registry/consul/"
                      ],
                      "service": {
                          "id": "{{ .consul_http_svc }}"
                      },
                      "source-control": {
                          "whitelist": [ "{{ .CIDR }}", "{{ .PublicIP }}", "127.0.0.1" ]
                      }
                  }
...