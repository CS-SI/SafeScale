#
# Copyright 2018-2019, CS Systemes d'Information, http://www.c-s.fr
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

---
feature:
    suitableFor:
        host: yes
        cluster: all
    requirements:
        features:
            - elasticsearch
    parameters:
        - KibanaPort=5601
        - KibanaHost={{.HostIP}}
        - ElasticsearchURL=http://localhost:9200/

    install:
        bash:
            check:
                pace: pkg
                steps:
                    pkg:
                        targets:
                            hosts: yes
                            masters: all
                            nodes: no
                        run: |
                            docker image ls {{ "--format '{{.Repository}}:{{.Tag}}'" }} | grep 'bitnami/kibana:7' &>/dev/null

            add:
                pace: image,config,start
                steps:
                    image:
                        targets:
                            hosts: yes
                            masters: all
                            nodes: no
                        run: |
                            docker pull bitnami/kibana:7

                    config:
                        targets:
                            hosts: yes
                            masters: all
                            nodes: no
                        run: |
                            mkdir -p ${SF_ETCDIR}/kibana ${SF_VARDIR}/kibana

                            cat >${SF_ETCDIR}/kibana/docker-compose.yml <<EOF
                            version: '2'

                            services:
                                server:
                                    image: 'bitnami/kibana:7'
                                    ports:
                                        - {{.HostIP}}:{{.KibanaPort}}:5601
                                    environment:
                                    {{ if .ClusterFlavor }}
                                        - KIBANA_ELASTICSEARCH_URL="https://{{.GatewayIP}}/services/elasticsearch/"
                                    {{ else }}
                                        - KIBANA_ELASTICSEARCH_URL="{{ .ElasticsearchURL }}
                                    {{ end }}
                                    volumes:
                                        - ${SF_VARDIR}/kibana:/bitnami
                                    restart: always
                            EOF
                            exit 0

                    start:
                        targets:
                            hosts: yes
                            masters: all
                            nodes: no
                        run: |
                            {{ if .ClusterFlavor }}
                            OPTIONS="-p kibana4safescale"
                            {{ else }}
                            OPTIONS=
                            {{ end }}
                            docker-compose -f ${SF_ETCDIR}/kibana/docker-compose.yml $OPTIONS up -d

            remove:
                pace: stop,remove
                steps:
                    stop:
                        targets:
                            hosts: yes
                            masters: all
                            nodes: no
                        run: |
                            {{ if .ClusterFlavor }}
                            OPTIONS="-p kibana4safescale"
                            {{ else }}
                            OPTIONS=
                            {{ end }}
                            docker-compose -f ${SF_ETCDIR}/kibana/docker-compose.yml $OPTIONS up -d

                    remove:
                        targets:
                            hosts: yes
                            masters: all
                            nodes: no
                        run: |
                            docker image rm -f bitnami/kibana:7
                            rm -rf ${SF_ETCDIR}/kibana ${SF_VARDIR}/kibana
                            exit 0

    proxy:
        rules:
            - name: kibana_svc
              type: service
              targets:
                  hosts: true
                  masters: all
              content: |
                  {
                      "name": "kibana_{{.Hostname}}",
                      "url": "http://{{.HostIP}}:5061/"
                  }

            - name: kibana_route
              type: route
              targets:
                  hosts: true
                  masters: all
              content: |
                  {
                      "paths": ["/monitoring/kibana/"],
                      "service": { "id": "{{.kibana_svc}}" }
                  }

...