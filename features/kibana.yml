#
# Copyright 2018-2020, CS Systemes d'Information, http://www.c-s.fr
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

---
feature:
    suitableFor:
        host: yes
        cluster: all
    parameters:
        - Version=7.2.0
        - KibanaPort=5601
        - KibanaHost={{.HostIP}}
        - ElasticsearchURL=http://{{.HostIP}}:9200/
    requirements:
        cluster:
            features:
                - elasticsearch

    install:
        bash:
            check:
                pace: docker
                steps:
                    docker:
                        targets:
                            hosts: yes
                            masters: all
                            nodes: no
                        run: |
                            sfDoesDockerRunContainer docker.elastic.co/kibana/kibana:{{ .Version }} || sfFail 192
                            sfExit

            add:
                pace: config,start
                steps:
                    config:
                        targets:
                            hosts: yes
                            masters: all
                            nodes: no
                        run: |
                            mkdir -p ${SF_ETCDIR}/kibana ${SF_VARDIR}/kibana

                            cat >${SF_ETCDIR}/kibana/config.yml <<-EOF
                            server:
                                name: {{.Hostname}}
                                host: 0.0.0.0
                            console.enabled: true
                            elasticsearch:
                            {{- if .ClusterFlavor }}
                                hosts:
                                {{- range .ClusterMasterIPs }}
                                    - "http://{{ . }}:9200/"
                                {{ end}}
                            {{ else }}
                                hosts:
                                    - "{{ .ElasticsearchURL }}"
                            {{ end }}
                            EOF

                            cat >${SF_ETCDIR}/kibana/docker-compose.yml <<-EOF
                            version: '2.1'

                            services:
                                server:
                                    image: docker.elastic.co/kibana/kibana:{{ .Version }}
                                    network_mode: "bridge"
                                    ports:
                                        - "{{.HostIP}}:{{ .KibanaPort }}:5601"
                                    volumes:
                                        - ${SF_ETCDIR}/kibana/config.yml:/usr/share/kibana/config/kibana.yml
                                    restart: always
                            EOF
                            sfExit

                    start:
                        targets:
                            hosts: yes
                            masters: all
                            nodes: no
                        run: |
                            {{ if .ClusterFlavor }}
                            OPTIONS="-p kibana4safescale"
                            {{ else }}
                            OPTIONS=
                            {{ end }}
                            docker-compose -f ${SF_ETCDIR}/kibana/docker-compose.yml $OPTIONS up -d || sfFail 193
                            sfExit

            remove:
                pace: stop,remove
                steps:
                    stop:
                        targets:
                            hosts: yes
                            masters: all
                            nodes: no
                        run: |
                            if [ -f ${SF_ETCDIR}/kibana/docker-compose.yml ]; then
                            {{ if .ClusterFlavor }}
                                OPTIONS="-p kibana4safescale"
                            {{ else }}
                                OPTIONS=
                            {{ end }}
                                docker-compose -f ${SF_ETCDIR}/kibana/docker-compose.yml $OPTIONS rm --stop -v --force || sfFail 194
                            fi
                            sfExit

                    remove:
                        targets:
                            hosts: yes
                            masters: all
                            nodes: no
                        run: |
                            docker image rm -f docker.elastic.co/kibana/kibana:{{ .Version }}
                            rm -rf ${SF_ETCDIR}/kibana ${SF_VARDIR}/kibana
                            sfExit

    proxy:
        rules:
            - name: kibana_backend
              type: upstream
              targets:
                  hosts: true
                  masters: all
              content: |
                  {
                      "target": "{{.HostIP}}:5061",
                      "weight": 100
                  }

            - name: kibana_svc
              type: service
              targets:
                  hosts: true
                  masters: any
              content: |
                  {
                      "protocol": "http",
                      "host": "kibana_backend",
                      "source-control": {
                          "whitelist": [ "{{ .CIDR }}", "{{ .DefaultRouteIP }}", "127.0.0.1" ]
                      }
                  }

            - name: kibana_route
              type: route
              targets:
                  hosts: true
                  masters: any
              content: |
                  {
                      "paths": [ "/kibana/" ],
                      "service": { "id": "{{.kibana_svc}}" }
                  }

...
