#
# Copyright 2018-2019, CS Systemes d'Information, http://www.c-s.fr
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
#
# WARNING: some PostgreSQL features, like subtransactions or trigger, are currently
#          not supported by Postgres-XL.
#          You shouldn't be able to replace PostgreSQL by Postgres-XL in every situations...

---
feature:
    suitableFor:
        host: no
        cluster: swarm

    requirements:
        features:
            - docker

    parameters:
        - GtmNodePort=6666
        - CoordinatorNodePort=5432
        - DataNodePort=5433
        - AdminPassword=
        - PurgeOnRemoval=no

    install:
        bash:
            check:
                pace: docker
                steps:
                    docker:
                        targets:
                            hosts: no
                            gateways: no
                            masters: all
                            nodes: no
                        run: |
                            docker image ls {{ "--format '{{.Repository}}:{{.Tag}}'" }} | grep 'postgresxl:latest' || fail 192
                            exit 0

            add:
                pace: network,config,image,stack,secret,firewall,start
                steps:
                    config:
                        targets:
                            hosts: no
                            gateways: no
                            masters: all
                            nodes: no
                        run: |
                            mkdir -p ${SF_ETCDIR}/postgresxl/{gtm-master,gtm-slave,gtm-proxy,coordinator,data}/options
                            mkdir -p ${SF_ETCDIR}/postgresxl/build
                            mkdir -p ${SF_VARDIR}/postgresxl/{gtm-master,gtm-slave,gtm-proxy,coordinator,data}
                            mkdir -p ${SF_LOGDIR}/postgresxl/{gtm-master,gtm-slave,gtm-proxy,coordinator,data}
                            chown -R 1003:safescale ${SF_VARDIR}/postgresxl/{gtm-master,gtm-slave,gtm-proxy,coordinator,data}
                            chmod -R 0700 ${SF_VARDIR}/postgresxl/{gtm-master,gtm-slave,gtm-proxy,coordinator,data}

                            cat >${SF_ETCDIR}/postgresxl/postgresql.conf <<-EOF
                            listen_addresses = '*'
                            max_connections = 500
                            data_directory = '/var/lib/pgsql/data'
                            wal_level = replica
                            synchronous_commit = on
                            shared_buffers = 128MB
                            timezone = 'UTC'
                            log_timezone = 'UTC'
                            autovacuum = on
                            track_counts = on
                            # password_encryption = scram-sha-256
                            password_encryption = md5

                            # Locale
                            lc_messages = 'en_US.UTF-8'
                            lc_monetary = 'en_US.UTF-8'
                            lc_numeric = 'en_US.UTF-8'
                            lc_time = 'en_US.UTF-8'
                            default_text_search_config = 'pg_catalog.english'

                            include_if_exists = '/etc/pgxl/coordinator.conf'
                            include_if_exists = '/etc/pgxl/data.conf'
                            include_dir = '/etc/pgxl/options'
                            EOF

                            cat >${SF_ETCDIR}/postgresxl/gtm-master/gtm.conf <<-EOF
                            startup = act
                            listen_addresses = '*'
                            nodename = gtmmaster
                            port = {{ .GtmNodePort }}
                            synchronous_backup = true
                            EOF

                            cat >${SF_ETCDIR}/postgresxl/gtm-slave/gtm.conf <<-EOF
                            startup = standby
                            listen_addresses = '*'
                            nodename = gtmslave
                            port = {{ .GtmNodePort }}
                            active_host = postgresxl_gtm-master
                            active_port = {{ .GtmNodePort }}
                            #keepalives_count = 3
                            #keepalives_interval = 10
                            synchronous_backup = true
                            EOF

                            INDEX={{ range $i, $e := .Masters }}{{ if eq $e.PrivateIP $.HostIP }}{{ $i }}{{ end }}{{ end }}

                            cat >${SF_ETCDIR}/postgresxl/gtm-proxy/gtm_proxy.conf <<-EOF
                            listen_addresses = '*'
                            nodename = gtmproxy${INDEX}
                            port = {{ .GtmNodePort }}
                            gtm_host = postgresxl_gtm-master
                            gtm_port = {{ .GtmNodePort }}
                            gtm_connect_retry_interval = 30
                            comm_timeout = 10
                            EOF

                            cat >${SF_ETCDIR}/postgresxl/coordinator/coordinator.conf <<-EOF
                            pgxc_node_name=coord${INDEX}
                            gtm_host = postgresxl_gtm-proxy
                            gtm_port = {{ .GtmNodePort }}
                            max_connections = 500
                            max_prepared_transactions = 50
                            EOF

                            cat >${SF_ETCDIR}/postgresxl/data/data.conf <<-EOF
                            pooler_port = {{ .GtmNodePort }}
                            pgxc_node_name=data${INDEX}
                            gtm_host = postgresxl_gtm-proxy
                            gtm_port = {{ .GtmNodePort }}
                            max_connections = 2000
                            max_prepared_transactions = 2000
                            EOF

                            GWBRIDGE_SUBNET=$(docker network inspect docker_gwbridge | jq -r .[0].IPAM.Config[0].Subnet)
                            OVERLAY_SUBNET=$(docker network inspect postgresxl_net | jq -r .[0].IPAM.Config[0].Subnet)
                            cat >${SF_ETCDIR}/postgresxl/pg_hba.conf <<-HBAEOF
                            # TYPE  DATABASE        USER            ADDRESS             METHOD
                            local   all             all                                 trust
                            host    all             all             127.0.0.0/8         trust
                            host    all             all             ${GWBRIDGE_SUBNET}  md5 # scram-sha-256
                            host    all             all             {{.CIDR}}           md5 # scram-sha-256
                            HBAEOF
                            exit 0

                    image:
                        targets:
                            hosts: no
                            gateways: no
                            masters: all
                            nodes: no
                        timeout: 10
                        run: |
                            cat >${SF_ETCDIR}/postgresxl/build/docker-entrypoint.sh <<-EOF
                            #!/bin/bash

                            KIND=\$1
                            shift

                            PGSQL_DATA=/var/lib/pgsql/data

                            update_postgresqlconf() {
                                rm -f \${PGSQL_DATA}/postgresql.conf
                                ln -sf /etc/pgxl/postgresql.conf \${PGSQL_DATA}
                            }

                            update_gtmconf() {
                                rm -f \${PGSQL_DATA}/gtm.conf
                                ln -sf /etc/pgxl/gtm.conf \${PGSQL_DATA}
                            }

                            update_gtmproxyconf() {
                                rm -f \${PGSQL_DATA}/gtm_proxy.conf
                                ln -sf /etc/pgxl/gtm_proxy.conf \${PGSQL_DATA}
                            }

                            update_pghbaconf() {
                                rm -f \${PGSQL_DATA}/pg_hba.conf
                                ln -sf /etc/pgxl/pg_hba.conf \${PGSQL_DATA}
                            }

                            wait_for_postgres() {
                                local timeout=\$1
                                [ ! -n \$timeout ] && timeout=60
                                timeout \$timeout bash -c "while ! psql -c 'select 1' >/dev/null; do sleep 5; done"
                            }

                            INDEX={{ range $i, $e := .Masters }}{{ if eq $e.PrivateIP $.HostIP }}{{ $i }}{{ end }}{{ end }}
                            case \$KIND in
                                gtm-master)
                                    NODENAME=gtmmaster
                                    ;;
                                gtm-slave)
                                    NODENAME=gtmslave
                                    ;;
                                gtm-proxy)
                                    NODENAME=gtmproxy\$INDEX
                                    ;;
                                coordinator)
                                    NODENAME=coord\$INDEX
                                    NODETYPE=--coordinator
                                    ;;
                                data)
                                    NODENAME=data\$INDEX
                                    NODETYPE=--datanode
                                    ;;
                            esac

                            if [ ! -f \${PGSQL_DATA}/PG_VERSION ]; then
                                mkdir -p \${PGSQL_DATA}
                                rm -rf \${PGSQL_DATA}/*
                                case \$KIND in
                                    gtm-master|gtm-slave)
                                        initgtm -Z gtm -D \${PGSQL_DATA}
                                        ;;
                                    gtm-proxy)
                                        initgtm -Z gtm_proxy -D \${PGSQL_DATA}
                                        ;;
                                    coordinator|data)
                                        # initdb -D \${PGSQL_DATA} --nodename \$NODENAME --auth=scram-sha-256 --username=postgres --pwfile=/run/secrets/postgresxl.password
                                        initdb -D \${PGSQL_DATA} --nodename \$NODENAME --auth=md5 --username=postgres --pwfile=/run/secrets/postgresxl.password
                                        ;;
                                esac
                            fi

                            # set postgres password
                            cat >\$HOME/.pgpass <<-EOF2
                            *:5432:*:postgres:\$(cat /run/secrets/postgresxl.password)
                            *:5433:*:postgres:\$(cat /run/secrets/postgresxl.password)
                            EOF2
                            chmod 0600 \$HOME/.pgpass
                            chown postgres:postgres \$HOME/.pgpass

                            # initialize cluster topomogy
                            if [ "\$KIND" == "coordinator" -o "\$KIND" == "data" ]; then
                                update_postgresqlconf
                                update_pghbaconf
                                postgres \$NODETYPE -h localhost -D \${PGSQL_DATA} >/dev/stdout 2>&1 &
                                pid=\$!
                                if [ -n \$pid ]; then
                                    wait_for_postgres 60

                                    # Define cluster topology
                                    cat <<-SQLEOF | psql
                            {{ range $i, $e := .Masters }}
                            CREATE NODE coord{{ $i }} WITH (TYPE = 'coordinator', HOST = '{{ $e.PrivateIP }}', PORT = 5432);
                            ALTER NODE coord{{ $i }} WITH (TYPE = 'coordinator', HOST = '{{ $e.PrivateIP }}', PORT = 5432);
                            CREATE NODE data{{ $i }} WITH (TYPE = 'datanode', HOST = '{{ $e.PrivateIP }}',  PORT = 5433);
                            ALTER NODE data{{ $i }} WITH (TYPE = 'datanode', HOST = '{{ $e.PrivateIP }}',  PORT = 5433);
                            {{ end }}
                            ALTER NODE data\$INDEX WITH (PRIMARY, PREFERRED);
                            SELECT pgxc_pool_reload();
                            SQLEOF

                                    # define the prefered data server for coordinator (both services on same host)
                                    psql -c "SELECT * FROM pgxc_node;"

                                    kill -s SIGINT \$pid
                                    rm -f \${PGSQL_DATA}/postmaster.pid /tmp/.s.PGSQL.5432
                                    sleep 10
                                fi
                            fi

                            # starts process based on first parameter
                            case \$KIND in
                                gtm-master)
                                    update_postgresqlconf
                                    update_gtmconf
                                    update_pghbaconf
                                    exec gtm -l /dev/stdout -D \${PGSQL_DATA} \$@
                                    ;;
                                gtm-slave)
                                    update_postgresqlconf
                                    update_gtmconf
                                    update_pghbaconf
                                    exec gtm -l /dev/stdout -D \${PGSQL_DATA} \$@
                                    ;;
                                gtm-proxy)
                                    update_postgresqlconf
                                    update_gtmproxyconf
                                    update_pghbaconf
                                    exec gtm_proxy -l /dev/stdout -D \${PGSQL_DATA} \$@
                                    ;;
                                coordinator)
                                    exec postgres --coordinator -D \${PGSQL_DATA} \$@ >/dev/stdout 2>&1
                                    ;;
                                data)
                                    exec postgres --datanode -D \${PGSQL_DATA} \$@ >/dev/stdout 2>&1
                                    ;;
                                *)
                                    update_postgresqlconf
                                    update_pghbaconf
                                    exec postgres -D \${PGSQL_DATA} \$@ >/dev/stdout 2>&1
                                    ;;
                            esac
                            EOF

                            PARALLEL=$(sfGetFact "2/3_of_threads")

                            cat >${SF_ETCDIR}/postgresxl/build/Dockerfile <<-EOF
                            FROM debian:stable-slim AS builder

                            ARG DEBIAN_FRONTEND=noninteractive
                            ARG RELEASE=10r1.1
                            ARG PARALLEL=1

                            RUN apt update \
                             && apt install -y wget \
                                               build-essential wget flex bison \
                                               zlib1g-dev libreadline-dev libssl-dev libxml2-dev libxslt-dev \
                                               locales \
                             && localedef -i en_US -c -f UTF-8 -A /usr/share/locale/locale.alias en_US.UTF-8
                            ENV LANG en_US.UTF-8
                            ENV LANGUAGE en_US:en
                            ENV LC_ALL en_US.UTF-8

                            RUN mkdir -p /usr/local/src
                            WORKDIR /usr/local/src

                            RUN wget https://www.postgres-xl.org/downloads/postgres-xl-\${RELEASE}.tar.gz \
                             && tar zxvf postgres-xl-\${RELEASE}.tar.gz
                            WORKDIR /usr/local/src/postgres-xl-\${RELEASE}

                            RUN ./configure --prefix=/usr/local \
                                            --sysconfdir=/etc/postgres-xl \
                                            --with-openssl \
                                            --without-systemd || cat config.log && exit 0

                            RUN make -j$PARALLEL \
                             && make install

                            RUN cd contrib \
                             && make -j$PARALLEL \
                             && make install

                            RUN rm -rf /usr/local/src/postgres-xl*

                            FROM debian:stable-slim
                            ARG DEBIAN_FRONTEND=noninteractive

                            # dependencies
                            RUN apt update \
                             && apt install -y zlib1g-dev libreadline-dev libssl-dev libxml2-dev libxslt-dev \
                                               locales netcat \
                                               vim net-tools inetutils-ping dnsutils procps nmap \
                             && localedef -i en_US -c -f UTF-8 -A /usr/share/locale/locale.alias en_US.UTF-8
                            ENV LANG en_US.UTF-8
                            ENV LANGUAGE en_US:en
                            ENV LC_ALL en_US.UTF-8

                            COPY --from=builder /usr/local/ /usr/local/
                            RUN useradd -u 1003 -d /home/postgres -m postgres \
                             && mkdir -p /etc/pgxl/options /var/lib/pgsql \
                             && chown -R postgres:postgres /var/lib/pgsql \
                             && chmod u+rwx,g+rx-w,o-rwx /var/lib/pgsql

                            EXPOSE 5432 6666

                            COPY docker-entrypoint.sh /
                            RUN chmod a+rx-w /docker-entrypoint.sh

                            USER postgres
                            WORKDIR /home/postgres

                            ENTRYPOINT ["/docker-entrypoint.sh"]
                            EOF

                            docker build --network host --build-arg PARALLEL=$PARALLEL -t postgresxl:latest ${SF_ETCDIR}/postgresxl/build || fail 192
                            yes | docker image prune || true
                            exit 0

                    stack:
                        targets:
                            hosts: no
                            gateways: no
                            masters: all
                            nodes: no
                        run: |
                            cat >${SF_ETCDIR}/postgresxl/stack.yml <<-EOF
                            version: '3.7'
                            services:
                                gtm-master:
                                    image: postgresxl:latest
                                    command: gtm-master
                                    volumes:
                                        - ${SF_ETCDIR}/postgresxl/postgresql.conf:/etc/pgxl/postgresql.conf:ro
                                        - ${SF_ETCDIR}/postgresxl/pg_hba.conf:/etc/pgxl/pg_hba.conf:ro
                                        - ${SF_ETCDIR}/postgresxl/gtm-master/gtm.conf:/etc/pgxl/gtm.conf:ro
                                        - ${SF_ETCDIR}/postgresxl/gtm-master/options:/etc/pgxl/options:ro
                                        - ${SF_VARDIR}/postgresxl/gtm-master:/var/lib/pgsql/data
                                    networks:
                                        - postgresxl_net
                                    deploy:
                                        mode: replicated
                                        replicas: 1
                                        placement:
                                            constraints:
                                                - node.role == manager
                                        resources:
                                            limits:
                                                memory: 256M
                                            reservations:
                                                memory: 64M
                                        restart_policy:
                                            condition: on-failure
                                            delay: 2s
                                            max_attempts: 3
                                            window: 120s
                                    # healthcheck:
                                    #     test: ["CMD", "pg_isready", "-U", "postgres"]
                                    #     interval: 10s
                                    #     timeout: 5s
                                    #     retries: 5
                                    secrets:
                                        - postgresxl.password

                                gtm-slave:
                                    image: postgresxl:latest
                                    command: gtm-slave
                                    volumes:
                                        - ${SF_ETCDIR}/postgresxl/postgresql.conf:/etc/pgxl/postgresql.conf:ro
                                        - ${SF_ETCDIR}/postgresxl/pg_hba.conf:/etc/pgxl/pg_hba.conf:ro
                                        - ${SF_ETCDIR}/postgresxl/gtm-slave/gtm.conf:/etc/pgxl/gtm.conf:ro
                                        - ${SF_ETCDIR}/postgresxl/gtm-slave/options:/etc/pgxl/options:ro
                                        - ${SF_VARDIR}/postgresxl/gtm-slave:/var/lib/pgsql/data
                                    networks:
                                        - postgresxl_net
                                    deploy:
                                        mode: replicated
                                        replicas: 1
                                        placement:
                                            constraints:
                                                - node.role == manager
                                        resources:
                                            limits:
                                                memory: 256M
                                            reservations:
                                                memory: 64M
                                        restart_policy:
                                            condition: on-failure
                                            delay: 2s
                                            max_attempts: 3
                                            window: 120s
                                    # healthcheck:
                                    #     test: ["CMD", "pg_isready", "-U", "postgres"]
                                    #     interval: 10s
                                    #     timeout: 5s
                                    #     retries: 5
                                    secrets:
                                        - postgresxl.password

                                gtm-proxy:
                                    image: postgresxl:latest
                                    command: gtm-proxy
                                    volumes:
                                        - ${SF_ETCDIR}/postgresxl/postgresql.conf:/etc/pgxl/postgresql.conf:ro
                                        - ${SF_ETCDIR}/postgresxl/pg_hba.conf:/etc/pgxl/pg_hba.conf:ro
                                        - ${SF_ETCDIR}/postgresxl/gtm-proxy/gtm_proxy.conf:/etc/pgxl/gtm_proxy.conf:ro
                                        - ${SF_ETCDIR}/postgresxl/gtm-proxy/options:/etc/pgxgl/options:ro
                                        - ${SF_VARDIR}/postgresxl/gtm-proxy:/var/lib/pgsql/data
                                    networks:
                                        - postgresxl_net
                                    ports:
                                        - published: 6666
                                          target: 6666
                                          mode: host
                                    deploy:
                                        mode: global
                                        placement:
                                            constraints:
                                                - node.role == manager
                                        resources:
                                            limits:
                                                memory: 256M
                                            reservations:
                                                memory: 64M
                                        restart_policy:
                                            condition: on-failure
                                            delay: 2s
                                            max_attempts: 3
                                            window: 120s
                                    # healthcheck:
                                    #     test: ["CMD", "pg_isready", "-U", "postgres"]
                                    #     interval: 10s
                                    #     timeout: 5s
                                    #     retries: 5
                                    secrets:
                                        - postgresxl.password

                                coordinator:
                                    image: postgresxl:latest
                                    command: coordinator
                                    volumes:
                                        - ${SF_ETCDIR}/postgresxl/postgresql.conf:/etc/pgxl/postgresql.conf:ro
                                        - ${SF_ETCDIR}/postgresxl/pg_hba.conf:/etc/pgxl/pg_hba.conf:ro
                                        - ${SF_ETCDIR}/postgresxl/coordinator/coordinator.conf:/etc/pgxl/coordinator.conf:ro
                                        - ${SF_ETCDIR}/postgresxl/coordinator/options:/etc/pgxl/options:ro
                                        - ${SF_VARDIR}/postgresxl/coordinator:/var/lib/pgsql/data
                                    networks:
                                        - postgresxl_net
                                    ports:
                                        - published: 5432
                                          target: 5432
                                          mode: host
                                    deploy:
                                        mode: global
                                        placement:
                                            constraints:
                                                - node.role == manager
                                        resources:
                                            limits:
                                                memory: 1024M
                                            reservations:
                                                memory: 256M
                                        restart_policy:
                                            condition: on-failure
                                            delay: 2s
                                            max_attempts: 3
                                            window: 120s
                                    # healthcheck:
                                    #     test: ["CMD", "pg_isready", "-U", "postgres"]
                                    #     interval: 10s
                                    #     timeout: 5s
                                    #     retries: 5
                                    secrets:
                                        - postgresxl.password

                                data:
                                    image: postgresxl:latest
                                    command: data
                                    volumes:
                                        - ${SF_ETCDIR}/postgresxl/postgresql.conf:/etc/pgxl/postgresql.conf:ro
                                        - ${SF_ETCDIR}/postgresxl/pg_hba.conf:/etc/pgxl/pg_hba.conf:ro
                                        - ${SF_ETCDIR}/postgresxl/data/data.conf:/etc/pgxl/data.conf:ro
                                        - ${SF_ETCDIR}/postgresxl/data/options:/etc/pgxl/options:ro
                                        - ${SF_VARDIR}/postgresxl/data:/var/lib/pgsql/data
                                    networks:
                                        - postgresxl_net
                                    ports:
                                        - published: 5433
                                          target: 5432
                                          mode: host
                                    deploy:
                                        mode: global
                                        placement:
                                            constraints:
                                                - node.role == manager
                                        resources:
                                            limits:
                                                memory: 2048M
                                            reservations:
                                                memory: 256M
                                        restart_policy:
                                            condition: on-failure
                                            delay: 2s
                                            max_attempts: 3
                                            window: 120s
                                    # healthcheck:
                                    #     test: ["CMD", "pg_isready", "-U", "postgres"]
                                    #     interval: 10s
                                    #     timeout: 5s
                                    #     retries: 5
                                    secrets:
                                        - postgresxl.password

                            secrets:
                                postgresxl.password:
                                    external: true

                            networks:
                                postgresxl_net:
                                    external: true
                            EOF
                            chmod go-rwx ${SF_ETCDIR}/postgresxl/stack.yml
                            exit 0

                    secret:
                        targets:
                            hosts: no
                            gateways: no
                            masters: any
                            nodes: no
                        run: |
                            docker secret rm postgresxl.password &>/dev/null || true
                            {{ if eq .AdminPassword "" }}
                            PASSWORD="$(sfRandomString 16 "[:alnum:]")"
                            {{ else }}
                            PASSWORD="{{ .AdminPassword }}"
                            {{ end }}
                            echo -n "$PASSWORD" | docker secret create postgresxl.password - || fail 193
                            exit 0

                    network:
                        targets:
                            hosts: no
                            gateways: no
                            masters: any
                            nodes: no
                        run: |
                            if ! docker network ls --filter 'Name=postgresxl_net' {{ "--format '{{.Name}}'" }} | grep "^postgresxl$"; then
                                docker network create -d overlay --scope swarm --attachable postgresxl_net
                            fi
                            exit 0

                    firewall:
                        targets:
                            hosts: no
                            gateways: no
                            masters: all
                            nodes: no
                        run: |
                            sfFirewallAdd --zone=trusted --add-interface=docker_gwbridge
                            sfFirewallReload || fail 204 "Firewall problem"
                            exit 0

                    start:
                        targets:
                            hosts: no
                            gateways: no
                            masters: any
                            nodes: no
                        run: |
                            docker stack deploy -c ${SF_ETCDIR}/postgresxl/stack.yml postgresxl || fail 194
                            sfRetry 5m 5 "sfDoesDockerRunService postgresxl:latest postgresxl_gtm-master" || fail 195
                            sfRetry 5m 5 "sfDoesDockerRunService postgresxl:latest postgresxl_gtm-slave" || fail 196
                            sfRetry 5m 5 "sfDoesDockerRunService postgresxl:latest postgresxl_gtm-proxy" || fail 197
                            sfRetry 5m 5 "sfDoesDockerRunService postgresxl:latest postgresxl_coordinator" || fail 198
                            sfRetry 5m 5 "sfDoesDockerRunService postgresxl:latest postgresxl_data" || fail 199
                            exit 0

            remove:
                pace: stack,cleanup
                steps:
                    stack:
                        targets:
                            hosts: no
                            gateways: no
                            masters: any
                            nodes: no
                        run: |
                            sfRetry 5m 5 "docker stack rm postgresxl" || fail 200
                            exit 0

                    cleanup:
                        targets:
                            hosts: no
                            gateways: no
                            masters: all
                            nodes: no
                        run: |
                            docker network rm postgresxl_net || true
                            sfRemoveDockerImage postgresxl:latest
                            sfRetry 5m 5 "docker secret rm postgresxl.password &>/dev/null"
                            PURGE_ON_REMOVAL="{{ .PurgeOnRemoval }}"
                            rm -rf ${SF_ETCDIR}/postgresxl ${SF_LOGDIR}/postgresxl
                            if [ "${PURGE_ON_REMOVAL,,}" = "yes" -o "${PURGE_ON_REMOVAL,,}" = "true" ]; then
                                rm -rf ${SF_VARDIR}/postgresxl
                            fi
                            exit 0

...