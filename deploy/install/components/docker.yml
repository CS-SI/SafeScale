#
# Copyright 2018, CS Systemes d'Information, http://www.c-s.fr
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

---
component:
    name: Docker
    suitableFor:
        host: yes
        cluster: all
    install:
        bash:
            check:
                pace: pkg
                steps:
                    pkg:
                        targets:
                            hosts: yes
                            masters: all
                            privateNodes: all
                            publicNodes: all
                        run: |
                            case $LINUX_KIND in
                                debian|ubuntu)
                                    dpkg -l | grep docker-ce &>/dev/null
                                    ;;
                                centos|rhel)
                                    rpm -qa | grep docker-ce &>/dev/null
                                    ;;
                                fedora)
                                    dnf list installed | grep docker-ce &>/dev/null
                                    ;;
                                *)
                                    echo "Unsupported operating system '$LINUX_KIND'"
                                    exit 1
                                    ;;
                            esac

            add:
                pace: docker-ce,docker-compose
                steps:
                    docker-ce:
                        serial: true
                        targets:
                            hosts: yes
                            masters: all
                            privateNodes: all
                            publicNodes: all
                        run: |
                            case $LINUX_KIND in
                                debian|ubuntu)
                                    export DEBIAN_FRONTEND=noninteractive
                                    sfWaitForApt && apt-get update
                                    sfWaitForApt && apt-get install -y apt-transport-https ca-certificates curl gnupg2 software-properties-common || exit 513
                                    curl -fsSL https://download.docker.com/linux/$LINUX_KIND/gpg | apt-key add - || exit 514
                                    echo "deb [arch=amd64] https://download.docker.com/linux/$LINUX_KIND $(lsb_release -cs) stable" >/etc/apt/sources.list.d/docker.list
                                    sfWaitForApt && apt-get update
                                    sfWaitForApt && apt-get install -qqy docker-ce jq
                                    [ $? -ne 0 ] && exit 515

                                    systemctl enable docker
                                    systemctl start docker
                                    ;;
                                centos|rhel)
                                    yum install -y yum-utils device-mapper-persistent-data lvm2 || exit 513
                                    yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo || exit 514
                                    yum install -y docker-ce jq || exit 515
                                    systemctl enable docker
                                    systemctl start docker
                                    ;;
                                fedora)
                                    dnf install -y dnf-plugins-core || exit 513
                                    dnf config-manager --add-repo https://download.docker.com/linux/fedora/docker-ce.repo
                                    dnf install -y docker-ce jq || exit 514
                                    systemctl enable docker
                                    systemctl start docker
                                    ;;
                                *)
                                    echo "Unsupported operating system '$LINUX_KIND'"
                                    exit 520
                                    ;;
                            esac

                    docker-compose:
                        targets:
                            hosts: yes
                            masters: all
                            privateNodes: all
                            publicNodes: all
                        run: |
                            VERSION=$(sfRetry 2m 5 "curl -Ssl https://api.github.com/repos/docker/compose/releases/latest | jq .name -r")
                            [ $? -ne 0 ] && exit 513
                            URL="https://github.com/docker/compose/releases/download/${VERSION}/docker-compose-$(uname -s)-$(uname -m)"
                            sfDownload "$URL" docker-compose 3m 5 || exit 514
                            chmod +x docker-compose && mv docker-compose /usr/bin

            remove:
                pace: docker-ce,docker-compose
                steps:
                    docker-ce:
                        targets:
                            hosts: yes
                            masters: all
                            privateNodes: all
                            publicNodes: all
                        run: |
                            case $LINUX_KIND in
                                debian|ubuntu)
                                    sfWaitForApt && apt-get remove -y docker-ce
                                    ;;
                                centos|rhel)
                                    yum remove -y docker-ce
                                    ;;
                                fedora)
                                    dnf erase -y docker-ce
                                    ;;
                                *)
                                    echo "Unsupported operating system '$LINUX_KIND'"
                                    exit 1
                                    ;;
                            esac
                    docker-compose:
                        targets:
                            hosts: yes
                            masters: all
                            privateNodes: all
                            publicNodes: all
                        run: |
                            rm -f /usr/local/bin/docker-compose

    service:
        start: |
            systemctl start docker-ce

        stop: |
            systemctl stop docker-ce

        state: |
            systemctl status docker-ce

...