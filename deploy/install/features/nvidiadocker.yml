#
# Copyright 2018, CS Systemes d'Information, http://www.c-s.fr
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

---
feature:
    name: nVidia-Docker2
    suitableFor:
        host: yes
        cluster: all
    requirements:
        features:
            - docker
            - docker-compose
    install:
        bash:
            check:
                pace: pkg
                steps:
                    pkg:
                        targets:
                            hosts: yes
                            masters: no
                            privateNodes: all
                            publicNodes: all
                        run: |
                            case $LINUX_KIND in
                                debian|ubuntu)
                                    dpkg -l | grep docker-nvidia2 &>/dev/null
                                    ;;
                                centos|rhel)
                                    rpm -qa | grep docker-nvidia2 &>/dev/null
                                    ;;
                                *)
                                    echo "Unsupported operating system '$LINUX_KIND'"
                                    exit 1
                                    ;;
                            esac

            add:
                pace: fromdist
                wallTime: 15
                steps:
                    fromdist:
                        targets:
                            hosts: yes
                            masters: no
                            privateNodes: all
                            publicNodes: all
                        run: |
                            lspci | grep -i nvidia &>/dev/null || {
                                echo "No nVidia GPU detected. Aborting."
                                exit 10
                            }
                            NVIDIA_URL=http://developer.download.nvidia.com/compute/cuda/repos
                            case $LINUX_KIND in
                                ubuntu)
                                    version=${VERSION_ID/./}
                                    wget -O cuda-repo.deb ${NVIDIA_URL}/ubuntu$version/x86_64/cuda-repo-ubuntu${version}_9.2.148-1_amd64.deb || \
                                    wget -O cuda-repo.deb ${NVIDIA_URL}/ubuntu1710/x86_64/cuda-repo-ubuntu1710_9.2.148-1_amd64.deb || exit $?
                                    dpkg -i cuda-repo.deb || exit $?
                                    apt-key adv --fetch-keys http://developer.download.nvidia.com/compute/cuda/repos/ubuntu${version}/x86_64/7fa2af80.pub
                                    rm -f cuda-repo.deb
                                    sfWaitForApt && apt install -y gcc linux-headers jq
                                    curl -s -L https://nvidia.github.io/nvidia-docker/gpgkey | apt-key add -
                                    distribution=$(. /etc/os-release;echo $ID$VERSION_ID)
                                    curl -s -L https://nvidia.github.io/nvidia-docker/$distribution/nvidia-docker.list | \
                                    tee /etc/apt/sources.list.d/nvidia-docker.list
                                    sfWaitForApt && apt update
                                    sfWaitForApt && apt install -y cuda || exit $?
                                    sfWaitForApt && yes | apt install -y nvidia-docker2 || exit $?
                                    ;;
                                debian)
                                    wget -O cuda-repo.deb ${NVIDIA_URL}/ubuntu1710/x86_64/cuda-repo-ubuntu1710_9.2.148-1_amd64.deb || exit $?
                                    dpkg -i cuda-repo.deb || exit $?
                                    sfWaitForApt && apt install -y dirmngr jq gcc linux-headers-$(uname -r) || exit $?
                                    apt-key adv --fetch-keys http://developer.download.nvidia.com/compute/cuda/repos/ubuntu1710/x86_64/7fa2af80.pub
                                    rm -f cuda-repo.deb
                                    curl -s -L https://nvidia.github.io/nvidia-docker/gpgkey | apt-key add -
                                    distribution=$(. /etc/os-release;echo $ID$VERSION_ID)
                                    curl -s -L https://nvidia.github.io/nvidia-docker/$distribution/nvidia-docker.list | \
                                    tee /etc/apt/sources.list.d/nvidia-docker.list
                                    wget -O screen-resolution-extra.deb http://security.ubuntu.com/ubuntu/pool/main/s/screen-resolution-extra/screen-resolution-extra_0.17.1.1_all.deb || exit $?
                                    wget -O python3-xkit.deb http://archive.ubuntu.com/ubuntu/pool/main/x/x-kit/python3-xkit_0.5.0ubuntu2_all.deb || exit $?
                                    apt -y install libgtk-3-0 policykit-1-gnome || exit $?
                                    dpkg -i python3-xkit.deb screen-resolution-extra.deb || exit $?
                                    sfWaitForApt && apt update
                                    sfWaitForApt && apt install -y cuda || exit $?
                                    sfWaitForApt && yes | apt install -y nvidia-docker2 || exit $?
                                    ;;
                                centos|rhel)
                                    yum install -y epel-release
                                    yum install -y gcc yum kernel-devel kernel-headers jq
                                    distribution=$(. /etc/os-release;echo $ID$VERSION_ID)
                                    curl -s -L https://nvidia.github.io/nvidia-docker/$distribution/nvidia-docker.repo | \
                                    tee /etc/yum.repos.d/nvidia-docker.repo || exit $?
                                    yum clean expire-cache
                                    yum install -y cuda nvidia-docker2 || exit $?
                                    ;;
                                *)
                                    echo "Unsupported operating system '$LINUX_KIND'"
                                    exit 1
                                    ;;
                            esac
                            exit 0

            remove:
                pace: pkg
                steps:
                    pkg:
                        targets:
                            hosts: yes
                            masters: no
                            privateNodes: all
                            publicNodes: all
                        run: |
                            case $LINUX_KIND in
                                debian|ubuntu)
                                    sfWaitForApt && apt remove -y nvidia-docker2
                                    ;;
                                centos|rhel)
                                    yum remove -y nvidia-docker2
                                    ;;
                                *)
                                    echo "Unsupported operating system '$LINUX_KIND'"
                                    exit 1
                                    ;;
                            esac

...